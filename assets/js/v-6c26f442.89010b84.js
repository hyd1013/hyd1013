"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[284],{5933:(a,n,s)=>{s.r(n),s.d(n,{data:()=>t});const t={key:"v-6c26f442",path:"/maven/Maven%E8%AF%A6%E8%A7%A3.html",title:"Maven详解(基础到高级)(入门到入土)",lang:"zh-CN",frontmatter:{title:"Maven详解(基础到高级)(入门到入土)",date:"2022/9/5 08:44",tag:["Java","maven"],categories:["后端"],coverUrl:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/Maven%E8%AF%A6%E8%A7%A3/Inked6b8468820eaf4c8a91a419e409ebc13d_LI.jpg"},excerpt:"",headers:[{level:2,title:"一、Maven简介",slug:"一、maven简介",children:[{level:3,title:"1、maven是什么？",slug:"_1、maven是什么",children:[]},{level:3,title:"2、maven的作用",slug:"_2、maven的作用",children:[]}]},{level:2,title:"二、下载与安装",slug:"二、下载与安装",children:[{level:3,title:"1、maven官网下载",slug:"_1、maven官网下载",children:[]},{level:3,title:"2、直接下载（推荐）",slug:"_2、直接下载-推荐",children:[]},{level:3,title:"3、安装与配置",slug:"_3、安装与配置",children:[]},{level:3,title:"4、配置本地仓库",slug:"_4、配置本地仓库",children:[]},{level:3,title:"5、配置阿里云的镜像仓库",slug:"_5、配置阿里云的镜像仓库",children:[]},{level:3,title:"6、配置maven运行的java环境",slug:"_6、配置maven运行的java环境",children:[]},{level:3,title:"7、配置完成后，预下载",slug:"_7、配置完成后-预下载",children:[]}]},{level:2,title:"三、基础概念",slug:"三、基础概念",children:[{level:3,title:"1、仓库",slug:"_1、仓库",children:[]},{level:3,title:"2、坐标",slug:"_2、坐标",children:[]}]},{level:2,title:"四、创建一个maven项目（使用IDEA2022.2）",slug:"四、创建一个maven项目-使用idea2022-2",children:[{level:3,title:"1、工程目录结构",slug:"_1、工程目录结构",children:[]},{level:3,title:"2、Maven构建项目命令",slug:"_2、maven构建项目命令",children:[]},{level:3,title:"3、在IDEA中配置maven",slug:"_3、在idea中配置maven",children:[]}]},{level:2,title:"五、依赖管理",slug:"五、依赖管理",children:[{level:3,title:"1、配置依赖",slug:"_1、配置依赖",children:[]},{level:3,title:"2、依赖传递",slug:"_2、依赖传递",children:[]},{level:3,title:"3、依赖传递冲突问题的优先顺序",slug:"_3、依赖传递冲突问题的优先顺序",children:[]},{level:3,title:"4、可选依赖",slug:"_4、可选依赖",children:[]},{level:3,title:"5、排除依赖",slug:"_5、排除依赖",children:[]},{level:3,title:"6、依赖范围",slug:"_6、依赖范围",children:[]},{level:3,title:"7、依赖范围传递性",slug:"_7、依赖范围传递性",children:[]}]},{level:2,title:"六、生命周期",slug:"六、生命周期",children:[{level:3,title:"1、项目构建生命周期",slug:"_1、项目构建生命周期",children:[]},{level:3,title:"2、clean生命周期",slug:"_2、clean生命周期",children:[]},{level:3,title:"3、default构建生命周期",slug:"_3、default构建生命周期",children:[]},{level:3,title:"4、site构建生命周期",slug:"_4、site构建生命周期",children:[]}]},{level:2,title:"七、插件",slug:"七、插件",children:[]}],git:{}}},5294:(a,n,s)=>{s.r(n),s.d(n,{default:()=>ca});var t=s(6252);const e=(0,t._)("h2",{id:"一、maven简介",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#一、maven简介","aria-hidden":"true"},"#"),(0,t.Uk)(" 一、Maven简介")],-1),l=(0,t._)("h3",{id:"_1、maven是什么",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1、maven是什么","aria-hidden":"true"},"#"),(0,t.Uk)(" 1、maven是什么？")],-1),p=(0,t._)("ul",null,[(0,t._)("li",null,"Maven是基于项目对象模型(POM project object model)，可以通过一小段描述信息（配置）来管理项目的构建，报告和文档的软件项目管理工具。"),(0,t._)("li",null,"Maven的本质是一个项目管理工具，将项目开发和管理过程抽象成一个项目对象模型(POM)。"),(0,t._)("li",null,"POM (Project ObjectModel) :项目对象模型。")],-1),c=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"Inked6b8468820eaf4c8a91a419e409ebc13d_LI.jpg",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/Maven%E8%AF%A6%E8%A7%A3/Inked6b8468820eaf4c8a91a419e409ebc13d_LI.jpg",data:"aurora"})],-1),o=(0,t.uE)('<h3 id="_2、maven的作用" tabindex="-1"><a class="header-anchor" href="#_2、maven的作用" aria-hidden="true">#</a> 2、maven的作用</h3><ul><li>项目构建:提供标准的、跨平台的自动化项目构建方式。</li><li>依赖管理:方便快捷的管理项目依赖的资源(jar包) ， 避免资源间的版本冲突问题。不用自己手动去下载jar ，pom文件会自动管理下载好的jar包。</li><li>统一开发结构:提供标准的、统一的项目结构。</li><li>用来解决导入java类依赖的jar,编译java项目主要问题。</li></ul><h2 id="二、下载与安装" tabindex="-1"><a class="header-anchor" href="#二、下载与安装" aria-hidden="true">#</a> 二、下载与安装</h2><h3 id="_1、maven官网下载" tabindex="-1"><a class="header-anchor" href="#_1、maven官网下载" aria-hidden="true">#</a> 1、maven官网下载</h3><h4 id="官网首页地址" tabindex="-1"><a class="header-anchor" href="#官网首页地址" aria-hidden="true">#</a> 官网首页地址：</h4><div class="language-http ext-http line-numbers-mode"><pre class="language-http"><code><span class="token header"><span class="token header-name keyword">https</span><span class="token punctuation">:</span><span class="token header-value">//maven.apache.org/</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="官方下载地址" tabindex="-1"><a class="header-anchor" href="#官方下载地址" aria-hidden="true">#</a> 官方下载地址</h4><div class="language-http ext-http line-numbers-mode"><pre class="language-http"><code><span class="token header"><span class="token header-name keyword">https</span><span class="token punctuation">:</span><span class="token header-value">//maven.apache.org/download.cgi</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',8),i=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"16623403034288.png",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/Maven%E8%AF%A6%E8%A7%A3/16623403034288.png",data:"aurora"})],-1),r=(0,t.uE)('<div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Binary（bin）是可执行版本，已经编译好可以直接使用。</p><p>Source (src)是源代码版本，需要自己编译成可执行软件才可使用。</p></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>tar.gz和zip两种压缩格式,其实这两个压缩文件里面包含的内容是同样的,只是压缩格式不同。</p><p>tar.gz格式的文件比zip文件小很多,用于unix操作系统。</p><p>zip格式用于Windows操作系统,但在Windows系统使用WinRar工具一样能够解压缩tar.gz格式 。</p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>注意，官网下载是不带maven本地仓库的，需要自己配置创建</p></div></div><h3 id="_2、直接下载-推荐" tabindex="-1"><a class="header-anchor" href="#_2、直接下载-推荐" aria-hidden="true">#</a> 2、直接下载（推荐）</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>这是我自己用的maven，压缩包中自带maven仓库及大多数开发常用依赖</p></div><h4 id="下载地址" tabindex="-1"><a class="header-anchor" href="#下载地址" aria-hidden="true">#</a> 下载地址</h4>',5),u={href:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/Maven%E8%AF%A6%E8%A7%A3/apache-maven-3.8.4.7z",target:"_blank",rel:"noopener noreferrer"},g=(0,t.Uk)("点击下载"),d=(0,t.uE)('<h3 id="_3、安装与配置" tabindex="-1"><a class="header-anchor" href="#_3、安装与配置" aria-hidden="true">#</a> 3、安装与配置</h3><h4 id="_1、解压maven" tabindex="-1"><a class="header-anchor" href="#_1、解压maven" aria-hidden="true">#</a> 1、解压maven</h4><p>下载完成后，选择任意盘符进行解压，<span style="color:red;"><strong>不建议放在c盘</strong></span></p><h4 id="_2、配置环境" tabindex="-1"><a class="header-anchor" href="#_2、配置环境" aria-hidden="true">#</a> 2、配置环境</h4><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>此电脑 → 属性 → 高级系统设置 → 环境变量 → 系统变量 → 新建变量 → 填写好变量名和变量值 → 去path配置路径</p></div>',5),k=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"1.png",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/Maven%E8%AF%A6%E8%A7%A3/1.png",data:"aurora"})],-1),m=(0,t._)("p",null,[(0,t.Uk)("新建系统环境变量：变量名：MAVEN_HOME 变量值：你"),(0,t._)("span",{style:{color:"red"}},[(0,t._)("strong",null,"解压Maven文件所在的地址")])],-1),h=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"2.png",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/Maven%E8%AF%A6%E8%A7%A3/2.png",data:"aurora"})],-1),b=(0,t._)("p",null,"配置path环境变量",-1),v=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"3.png",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/Maven%E8%AF%A6%E8%A7%A3/3.png",data:"aurora"})],-1),y=(0,t._)("p",null,[(0,t.Uk)("点击新建，填入"),(0,t._)("code",null,"%MAVEN_HOME%\\bin")],-1),x=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"4.png",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/Maven%E8%AF%A6%E8%A7%A3/4.png",data:"aurora"})],-1),_=(0,t._)("p",null,[(0,t._)("code",null,"win+R"),(0,t.Uk)("运行"),(0,t._)("code",null,"cmd"),(0,t.Uk)("，输入"),(0,t._)("code",null,"mvn -version"),(0,t.Uk)("，如图所示则配置成功")],-1),f=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"5.png",originSrc:"https://bdqn-blog.oss-cn-beijing.aliyuncs.com/blog/Maven%E8%AF%A6%E8%A7%A3/5.png",data:"aurora"})],-1),A=(0,t.uE)('<h3 id="_4、配置本地仓库" tabindex="-1"><a class="header-anchor" href="#_4、配置本地仓库" aria-hidden="true">#</a> 4、配置本地仓库</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>​ 必须配置，因为如果如果不手动配置一个手动仓库，Maven会自动给你添加到默认地址也就是c盘中的.m2的位置，随着导入的包越来越多，也会占用越来越多内存导致电脑运行速度慢。所以需要自己配置一个本地仓库并且设置以后从中央仓库下载到的包放在自己设置的仓库中。</p></div><p>在除C盘外的任意盘符创建一个名为<code>repository</code>的文件夹，<span style="color:red;"><strong>推荐在maven根目录下创建</strong></span></p>',3),E=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"6.png",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/Maven%E8%AF%A6%E8%A7%A3/6.png",data:"aurora"})],-1),j=(0,t._)("p",null,[(0,t.Uk)("在你解压maven根目录中的"),(0,t._)("code",null,"\\conf"),(0,t.Uk)("文件夹下找到"),(0,t._)("code",null,"settings.xml"),(0,t.Uk)("文件，选中后右键编辑或者用任意文本编辑器打开")],-1),I=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"7.png",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/Maven%E8%AF%A6%E8%A7%A3/7.png",data:"aurora"})],-1),M=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"8.png",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/Maven%E8%AF%A6%E8%A7%A3/8.png",data:"aurora"})],-1),z=(0,t._)("p",null,"找到localRepository标签，t填入刚才所创建的repository文件夹地址",-1),P=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"9.png",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/Maven%E8%AF%A6%E8%A7%A3/9.png",data:"aurora"})],-1),F=(0,t.uE)('<div class="custom-container tip"><p class="custom-container-title">TIP</p><p>localRepository节点用于配置本地仓库，本地仓库其实起到了一个缓存的作用，它的默认地址是 C:\\Users\\用户名.m2。</p><p>当我们从maven中获取jar包的时候，maven首先会在本地仓库中查找，如果本地仓库有则返回；如果没有则从远程仓库中获取包，并在本地库中保存。</p><p>全局setting与用户setting区别：</p><p>​ 全局setting定义了当前windows系统下所有用户的配置</p><p>​ 用户setting定义了当前windows系统下登录用户的配置</p></div><h3 id="_5、配置阿里云的镜像仓库" tabindex="-1"><a class="header-anchor" href="#_5、配置阿里云的镜像仓库" aria-hidden="true">#</a> 5、配置阿里云的镜像仓库</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>因为如果都是从中央仓库中获取的话速度会很慢，因为中央仓库的地址在国外，所以我们需要用到阿里云创建的地址去访问中央仓库 ，这样下载jar包的速度比较快。</p><p>视情况选择，可以同时配置多个镜像仓库，推荐保留原有中央仓库配置，在中央仓库下面再配置阿里云镜像仓库。</p><p>阿里云镜像仓库虽然快，但是更新并不是那么的及时，有些最新的依赖或者使用较少的依赖可能会下载不到，所以推荐保留中央仓库配置。</p></div><p>在settings.xml配置文件中找到mirrors标签，添加如下配置（注意要添加在<code>&lt;mirrors&gt;</code>和<code>&lt;/mirrors&gt;</code>两个标签之间）</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>alimaven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">&gt;</span></span>central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>aliyun maven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">&gt;</span></span>http://maven.aliyun.com/nexus/content/repositories/central/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>',5),S=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"10.png",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/Maven%E8%AF%A6%E8%A7%A3/10.png",data:"aurora"})],-1),T=(0,t.uE)('<h3 id="_6、配置maven运行的java环境" tabindex="-1"><a class="header-anchor" href="#_6、配置maven运行的java环境" aria-hidden="true">#</a> 6、配置maven运行的java环境</h3><p>在settings.xml配置文件中找到profiles标签，添加如下配置（注意要添加在<code>&lt;profiles&gt;</code>和<code>&lt;/profiles&gt;</code>两个标签之间）</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>jdk-1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activation</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeByDefault</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeByDefault</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>jdk</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>jdk</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activation</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.compilerVersion</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.compilerVersion</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>',3),q=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"11.png",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/Maven%E8%AF%A6%E8%A7%A3/11.png",data:"aurora"})],-1),w=(0,t.uE)('<h3 id="_7、配置完成后-预下载" tabindex="-1"><a class="header-anchor" href="#_7、配置完成后-预下载" aria-hidden="true">#</a> 7、配置完成后，预下载</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>​ 运行cmd,输入mvn help:system测试，Maven相关工具自动帮我们到Maven中央仓库下载缺省的或者Maven中央仓库更新的各种配置文件和类库（jar包)到Maven本地仓库中。</p></div><h2 id="三、基础概念" tabindex="-1"><a class="header-anchor" href="#三、基础概念" aria-hidden="true">#</a> 三、基础概念</h2><h3 id="_1、仓库" tabindex="-1"><a class="header-anchor" href="#_1、仓库" aria-hidden="true">#</a> 1、仓库</h3>',4),U=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"12.webp",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/Maven%E8%AF%A6%E8%A7%A3/12.webp",data:"aurora"})],-1),N=(0,t.uE)('<div class="custom-container tip"><p class="custom-container-title">TIP</p><p>仓库:用于存储资源，包含各种jar包</p></div><h4 id="仓库分类" tabindex="-1"><a class="header-anchor" href="#仓库分类" aria-hidden="true">#</a> 仓库分类:</h4><ul><li>本地仓库:自己电脑.上存储资源的仓库，连接远程仓库获取资源。</li><li>远程仓库:非本机电脑上的仓库，为本地仓库提供资源。 <ul><li>中央仓库: Maven团队维护，存储所有资源的仓库。</li><li>私服:部门/公司范围内存储资源的仓库，从中央仓库获取资源。</li></ul></li></ul><h4 id="私服的作用" tabindex="-1"><a class="header-anchor" href="#私服的作用" aria-hidden="true">#</a> 私服的作用:</h4><ul><li>保存具有版权的资源，包含购买或自主研发的jar包。 <ul><li>中央仓库中的jar都是开源的，不能存储具有版权的资源。</li></ul></li><li>一定范围内共享资源，仅对内部开放，不对外共享。</li></ul><h3 id="_2、坐标" tabindex="-1"><a class="header-anchor" href="#_2、坐标" aria-hidden="true">#</a> 2、坐标</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Maven中的坐标用于描述仓库中资源的位置</p></div>',7),R=(0,t.Uk)("maven中央仓库地址（可直接访问）："),D={href:"https://repo1.maven.org/maven2/",target:"_blank",rel:"noopener noreferrer"},W=(0,t.Uk)("中央仓库"),O=(0,t.uE)('<h4 id="maven坐标主要组成" tabindex="-1"><a class="header-anchor" href="#maven坐标主要组成" aria-hidden="true">#</a> Maven坐标主要组成</h4><table><thead><tr><th style="text-align:center;">标签</th><th style="text-align:center;">释意</th></tr></thead><tbody><tr><td style="text-align:center;">groupld</td><td style="text-align:center;">定义当前Maven项目隶属组织名称(通常是域名反写，例如: org.mybatis)</td></tr><tr><td style="text-align:center;">artifactld</td><td style="text-align:center;">定义当前Maven项目名称(通常是模块名称，例如CRM、SMS)</td></tr><tr><td style="text-align:center;">version</td><td style="text-align:center;">定义当前项目版本号</td></tr><tr><td style="text-align:center;">packaging</td><td style="text-align:center;">定义该项目的打包方式</td></tr></tbody></table><h4 id="maven坐标的作用" tabindex="-1"><a class="header-anchor" href="#maven坐标的作用" aria-hidden="true">#</a> Maven坐标的作用</h4><p>使用唯一标识，唯一性定位资源位置，通过该标识可以将资源的识别与下载工作交由机器完成</p>',4),Y={class:"custom-container tip"},B=(0,t._)("p",{class:"custom-container-title"},"TIP",-1),C=(0,t.Uk)("maven坐标查询网站："),J={href:"https://mvnrepository.com/",target:"_blank",rel:"noopener noreferrer"},L=(0,t.Uk)("Maven Repository: Search/Browse/Explore (mvnrepository.com)"),V=(0,t.uE)('<h2 id="四、创建一个maven项目-使用idea2022-2" tabindex="-1"><a class="header-anchor" href="#四、创建一个maven项目-使用idea2022-2" aria-hidden="true">#</a> 四、创建一个maven项目（使用IDEA2022.2）</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>打开idea → New Project → Name(输入项目名称) → Build system(选择打包方式为Maven) → Advanced Settings(设置项目编号及版本)</p><p><span style="color:red;"><strong>具体操作如下GIF图所示</strong></span></p></div>',2),G=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"13.gif",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/Maven%E8%AF%A6%E8%A7%A3/13.gif",data:"aurora"})],-1),H=(0,t._)("h3",{id:"_1、工程目录结构",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1、工程目录结构","aria-hidden":"true"},"#"),(0,t.Uk)(" 1、工程目录结构")],-1),Z=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"14.jpg",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/Maven%E8%AF%A6%E8%A7%A3/14.jpg",data:"aurora"})],-1),K=(0,t.uE)('<h3 id="_2、maven构建项目命令" tabindex="-1"><a class="header-anchor" href="#_2、maven构建项目命令" aria-hidden="true">#</a> 2、Maven构建项目命令</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Maven构建命令使用mvn开头，后面添加功能参数，可以一次执行多个命令，使用空格分隔。</p><p>这里只展示常用的几个参数，其他参数请自行查看官网</p></div><table><thead><tr><th style="text-align:center;">命令</th><th style="text-align:center;">释意</th></tr></thead><tbody><tr><td style="text-align:center;">mvn compile</td><td style="text-align:center;">编译项目</td></tr><tr><td style="text-align:center;">mvn clean</td><td style="text-align:center;">清理缓存</td></tr><tr><td style="text-align:center;">mvn test</td><td style="text-align:center;">测试打包</td></tr><tr><td style="text-align:center;">mvn package</td><td style="text-align:center;">打包项目</td></tr><tr><td style="text-align:center;">mvn install</td><td style="text-align:center;">安装到本地仓库（集成了编译及打包命令）</td></tr></tbody></table><h3 id="_3、在idea中配置maven" tabindex="-1"><a class="header-anchor" href="#_3、在idea中配置maven" aria-hidden="true">#</a> 3、在IDEA中配置maven</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>File → Settings →<code>Build,Execution,Deployment</code> → Build Tools → Maven</p></div>',5),Q=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"15.png",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/Maven%E8%AF%A6%E8%A7%A3/15.png",data:"aurora"})],-1),X=(0,t.uE)('<div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>注意，如果只是这样配置的话我们每次创建maven项目就要重新配置一次。</p><p>否则，idea默认使用自带的maven配置，也就是自动把所有依赖全部下载到C盘中。</p></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>配置新建项目时自动初始化maven配置</p><p>File → New Project Setup → Settings For New Projects</p><p>打开后设置方式参上图</p><p>各版本的IDEA此设置的路径都有所偏差，但是意思都差不多，在File选项里找到<span style="color:red;"><strong>Settings For New Projects</strong></span>即可</p></div><h2 id="五、依赖管理" tabindex="-1"><a class="header-anchor" href="#五、依赖管理" aria-hidden="true">#</a> 五、依赖管理</h2><h3 id="_1、配置依赖" tabindex="-1"><a class="header-anchor" href="#_1、配置依赖" aria-hidden="true">#</a> 1、配置依赖</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>依赖指当前项目运行所需的jar,一个项目可以设置多个依赖。</p></div><p>格式如下：</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!--具体依赖--&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--依赖所属群组id--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--依赖所属项目id--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--依赖版本号--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="_2、依赖传递" tabindex="-1"><a class="header-anchor" href="#_2、依赖传递" aria-hidden="true">#</a> 2、依赖传递</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>依赖具有传递性:</p><p>​ 直接依赖:在当前项目中通过依赖配置建立的依赖关系</p><p>​ 间接依赖: 被资源的资源如果依赖其他资源，当前项目间接依赖其他资源</p></div><h3 id="_3、依赖传递冲突问题的优先顺序" tabindex="-1"><a class="header-anchor" href="#_3、依赖传递冲突问题的优先顺序" aria-hidden="true">#</a> 3、依赖传递冲突问题的优先顺序</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>路径优先:当依赖中出现相同的资源时，层级越深，优先级越低，层级越浅，优先级越高</p><p>声明优先:当资源在相同层级被依赖时，配置顺序靠前的覆盖配置顺序靠后的</p><p>特殊优先:当同级配置了相同资源的不同版本，后配置的覆盖先配置的</p></div>',11),$=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"16.jpg",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/Maven%E8%AF%A6%E8%A7%A3/16.jpg",data:"aurora"})],-1),aa=(0,t.uE)('<h3 id="_4、可选依赖" tabindex="-1"><a class="header-anchor" href="#_4、可选依赖" aria-hidden="true">#</a> 4、可选依赖</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>可选依赖指对外隐藏当前所依赖的资源——<span style="color:red;"><strong>不透明</strong></span></p></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!--具体依赖--&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--依赖所属群组id--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--依赖所属项目id--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--依赖版本号--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!--可选依赖指对外隐藏当前所依赖的资源--不透明--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="_5、排除依赖" tabindex="-1"><a class="header-anchor" href="#_5、排除依赖" aria-hidden="true">#</a> 5、排除依赖</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>排除依赖指主动断开依赖的资源，被排除的资源无需指定版本——<span style="color:red;"><strong>不需要</strong></span></p><p>一般来讲只有在多个依赖项目冲突的时候才会使用exclusions来排除掉其他依赖</p></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.hamcrest<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hamcrest-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="_6、依赖范围" tabindex="-1"><a class="header-anchor" href="#_6、依赖范围" aria-hidden="true">#</a> 6、依赖范围</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>依赖的jar默认情况可以在任何地方使用，可以通过scope标签设定其作用范围</p><p>作用范围</p><ul><li>主程序范围有效(main文件夹范围内)</li><li>测试程序范围有效(test文件夹范围内)</li><li>是否参与打包(package指令范围内)</li></ul></div><table><thead><tr><th style="text-align:center;">scope</th><th style="text-align:center;">主代码</th><th style="text-align:center;">测试代码</th><th style="text-align:center;">打包</th><th style="text-align:center;">范例</th></tr></thead><tbody><tr><td style="text-align:center;">compile（依赖）</td><td style="text-align:center;">Y</td><td style="text-align:center;">Y</td><td style="text-align:center;">Y</td><td style="text-align:center;">log4j</td></tr><tr><td style="text-align:center;">test</td><td style="text-align:center;"></td><td style="text-align:center;">Y</td><td style="text-align:center;"></td><td style="text-align:center;">junit</td></tr><tr><td style="text-align:center;">provided</td><td style="text-align:center;">Y</td><td style="text-align:center;">Y</td><td style="text-align:center;"></td><td style="text-align:center;">servlet-api</td></tr><tr><td style="text-align:center;">runtime</td><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;">Y</td><td style="text-align:center;">jdbc</td></tr></tbody></table><h3 id="_7、依赖范围传递性" tabindex="-1"><a class="header-anchor" href="#_7、依赖范围传递性" aria-hidden="true">#</a> 7、依赖范围传递性</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>带有依赖范围的资源在进行传递时，作用范围将受到影响</p></div>',11),na=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"17.jpg",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/Maven%E8%AF%A6%E8%A7%A3/17.jpg",data:"aurora"})],-1),sa=(0,t.uE)('<h2 id="六、生命周期" tabindex="-1"><a class="header-anchor" href="#六、生命周期" aria-hidden="true">#</a> 六、生命周期</h2><h3 id="_1、项目构建生命周期" tabindex="-1"><a class="header-anchor" href="#_1、项目构建生命周期" aria-hidden="true">#</a> 1、项目构建生命周期</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><ul><li>Maven构建生命周期描述的是一次构建过程经历经历了多少个事件</li><li>Maven对项目构建的生命周期划分为3套 <ul><li>clean: 清理工作</li><li>default:核心工作，例如编译，测试,打包,部署等</li><li>site: 产生报告，发布站点等</li></ul></li></ul></div>',3),ta=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"18.png",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/Maven%E8%AF%A6%E8%A7%A3/18.png",data:"aurora"})],-1),ea=(0,t.uE)('<h3 id="_2、clean生命周期" tabindex="-1"><a class="header-anchor" href="#_2、clean生命周期" aria-hidden="true">#</a> 2、clean生命周期</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>pre-clean 执行一-些需要在clean之前完成的工作</p><p>clean 移除所有上一次构建生成的文件post-clean</p><p>post-clean 执行一些需要在clean之 后立刻完成的工作</p></div><h3 id="_3、default构建生命周期" tabindex="-1"><a class="header-anchor" href="#_3、default构建生命周期" aria-hidden="true">#</a> 3、default构建生命周期</h3><table><thead><tr><th style="text-align:left;">阶段</th><th style="text-align:left;">释意</th></tr></thead><tbody><tr><td style="text-align:left;">validate（校验）</td><td style="text-align:left;">校验项目是否正确并且所有必要的信息可以完成项目的构建过程</td></tr><tr><td style="text-align:left;">initialize（初始化）</td><td style="text-align:left;">初始化构建状态，比如设置属性值</td></tr><tr><td style="text-align:left;">generate-sources（生成源代码）</td><td style="text-align:left;">生成包含在编译阶段中的任何源代码</td></tr><tr><td style="text-align:left;">process-sources（处理源代码）</td><td style="text-align:left;">处理源代码，比如说，过滤任意值</td></tr><tr><td style="text-align:left;">generate-resources（生成资源文件）</td><td style="text-align:left;">生成将会包含在项目包中的资源文件</td></tr><tr><td style="text-align:left;">precess-resources（处理资源文件）</td><td style="text-align:left;">复制和处理资源到目标目录，为打包阶段做好准备</td></tr><tr><td style="text-align:left;">complie（编译）</td><td style="text-align:left;">编译项目的源代码</td></tr><tr><td style="text-align:left;">process-classes（处理类文件）</td><td style="text-align:left;">处理编译生成的文件，比如说对Java class文件做字节码改善优化</td></tr><tr><td style="text-align:left;">generate-test-sources（生成测试源代码）</td><td style="text-align:left;">生成包含在编译阶段中的任何测试源代码</td></tr><tr><td style="text-align:left;">process-test-sources（处理测试源代码）</td><td style="text-align:left;">处理测试源代码，比如说，过滤任意值</td></tr><tr><td style="text-align:left;">generate-test-resources（生成测试资源文件）</td><td style="text-align:left;">为测试创建资源文件</td></tr><tr><td style="text-align:left;">precess-test-resources（处理测试资源文件）</td><td style="text-align:left;">复制和处理测试资源到目标目录</td></tr><tr><td style="text-align:left;">test-compile（编译测试源码）</td><td style="text-align:left;">编译测试源代码到测试目标目录</td></tr><tr><td style="text-align:left;">process-test-classes（处理测试类文件）</td><td style="text-align:left;">处理测试源代码编译生成的文件</td></tr><tr><td style="text-align:left;">test（测试）</td><td style="text-align:left;">使用合适的单元测试框架运行测试（Juint是其中之一）</td></tr><tr><td style="text-align:left;">prepare-package（准备打包）</td><td style="text-align:left;">在实际打包之前，执行任何的必要的操作为打包做准备</td></tr><tr><td style="text-align:left;">package（打包）</td><td style="text-align:left;">将编译后的代码打包成可分发格式的文件，比如JAR、WAR或者EAR文件</td></tr><tr><td style="text-align:left;">pre-intergration-test（集成测试前）</td><td style="text-align:left;">在执行集成测试前进行必要的动作，比如说，搭建需要的环境</td></tr><tr><td style="text-align:left;">intergration-test（集成测试）</td><td style="text-align:left;">处理和部署项目到可以运行集成测试环境中</td></tr><tr><td style="text-align:left;">post-intergration-test（集成测试后）</td><td style="text-align:left;">在执行集成测试完成后进行必要的动作，比如说，清理集成测试环境</td></tr><tr><td style="text-align:left;">verify（验证）</td><td style="text-align:left;">运行任意的检查来验证项目包有效且达到质量标准</td></tr><tr><td style="text-align:left;">install（安装）</td><td style="text-align:left;">安装项目包到本地仓库，这样项目包可以用做其他本地项目的依赖</td></tr><tr><td style="text-align:left;">deploy（部署）</td><td style="text-align:left;">将最终的项目包复制到远程仓库中与其他开发者和项目共享</td></tr></tbody></table><h3 id="_4、site构建生命周期" tabindex="-1"><a class="header-anchor" href="#_4、site构建生命周期" aria-hidden="true">#</a> 4、site构建生命周期</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>pre-site 执行一些需要在生成站点文档之前完成的工作</p><p>site 生成项目的站点文档</p><p>post-site 执行一些需要在生成站点文档之后完成的工作，并且为部署做准备</p><p>site-deploy 将生成的站点文档部署到特定的服务器上</p></div><h2 id="七、插件" tabindex="-1"><a class="header-anchor" href="#七、插件" aria-hidden="true">#</a> 七、插件</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>插件与生命周期内的阶段绑定，在执行到对应生命周期时执行对应的插件功能</p><p>默认maven在各个生命周期上绑定有预设的功能</p><p>通过插件可以自定义其他功能</p></div><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token comment">&lt;!--构建--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!--    设置插件--&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>  \n        <span class="token comment">&lt;!--  具体插件配置--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>\n            <span class="token comment">&lt;!-- 组名--&gt;</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token comment">&lt;!--  插件名--&gt;</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-source-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token comment">&lt;!-- 版本号--&gt;</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.2.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">&gt;</span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">&gt;</span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goal</span><span class="token punctuation">&gt;</span></span>jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goal</span><span class="token punctuation">&gt;</span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goal</span><span class="token punctuation">&gt;</span></span>test-jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goal</span><span class="token punctuation">&gt;</span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goals</span><span class="token punctuation">&gt;</span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>phase</span><span class="token punctuation">&gt;</span></span>generate-test-resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>phase</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div>',9),la=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"19.jpg",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/Maven%E8%AF%A6%E8%A7%A3/19.jpg",data:"aurora"})],-1),pa={},ca=(0,s(3744).Z)(pa,[["render",function(a,n){const s=(0,t.up)("ExternalLinkIcon");return(0,t.wg)(),(0,t.iD)(t.HY,null,[e,l,p,c,o,i,r,(0,t._)("p",null,[(0,t._)("a",u,[g,(0,t.Wm)(s)])]),d,k,m,h,b,v,y,x,_,f,A,E,j,I,M,z,P,F,S,T,q,w,U,N,(0,t._)("p",null,[R,(0,t._)("a",D,[W,(0,t.Wm)(s)])]),O,(0,t._)("div",Y,[B,(0,t._)("p",null,[C,(0,t._)("a",J,[L,(0,t.Wm)(s)])])]),V,G,H,Z,K,Q,X,$,aa,na,sa,ta,ea,la],64)}]])}}]);