"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[215],{1101:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-13c9aef5",path:"/vue/vue.html",title:"Vue基础",lang:"zh-CN",frontmatter:{title:"Vue基础",date:"2022/9/2 11:06",tag:["vue"],categories:["前端"],coverUrl:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210831004055590.png"},excerpt:"",headers:[{level:3,title:"vue技术栈",slug:"vue技术栈",children:[]},{level:3,title:"解决什么问题",slug:"解决什么问题",children:[]},{level:2,title:"1.安装",slug:"_1-安装",children:[{level:3,title:"VUE初体验",slug:"vue初体验",children:[]}]},{level:2,title:"2.Vue实例",slug:"_2-vue实例",children:[{level:3,title:"基本概念",slug:"基本概念",children:[]},{level:3,title:"创建",slug:"创建",children:[]},{level:3,title:"数据与方法",slug:"数据与方法",children:[]},{level:3,title:"生命周期钩子",slug:"生命周期钩子",children:[]}]},{level:2,title:"3.指令",slug:"_3-指令",children:[{level:3,title:"指令概念",slug:"指令概念",children:[]}]},{level:2,title:"4.过滤器",slug:"_4-过滤器",children:[{level:3,title:"作用",slug:"作用-9",children:[]},{level:3,title:"适用场景",slug:"适用场景-1",children:[]},{level:3,title:"语法",slug:"语法-1",children:[]},{level:3,title:"例子",slug:"例子",children:[]}]},{level:2,title:"5.计算属性",slug:"_5-计算属性",children:[]},{level:2,title:"6.侦听器",slug:"_6-侦听器",children:[]},{level:2,title:"7.Vue组件",slug:"_7-vue组件",children:[{level:3,title:"7-1.组件的定义",slug:"_7-1-组件的定义",children:[]},{level:3,title:"7-2.组件中的结构",slug:"_7-2-组件中的结构",children:[]},{level:3,title:"7-3.组件中的data只能是一个function",slug:"_7-3-组件中的data只能是一个function",children:[]},{level:3,title:"7-4.父组件向子组件传值(子组件使用父组件的数据)",slug:"_7-4-父组件向子组件传值-子组件使用父组件的数据",children:[]},{level:3,title:"7-5.子组件调用父组件的方法(父组件的方法传递给子组件)",slug:"_7-5-子组件调用父组件的方法-父组件的方法传递给子组件",children:[]},{level:3,title:"7-6.子组件调用父组件方法的时候传参",slug:"_7-6-子组件调用父组件方法的时候传参",children:[]},{level:3,title:"7-7.兄弟组件之间的通信",slug:"_7-7-兄弟组件之间的通信",children:[]},{level:3,title:"7-8.采用v-if来实现不同组件的切换",slug:"_7-8-采用v-if来实现不同组件的切换",children:[]},{level:3,title:"7-9.动态组件",slug:"_7-9-动态组件",children:[]},{level:3,title:"7-10.插槽",slug:"_7-10-插槽",children:[]},{level:3,title:"7-11.组件的嵌套",slug:"_7-11-组件的嵌套",children:[]},{level:3,title:"7-12.组件复用案例：购物车",slug:"_7-12-组件复用案例-购物车",children:[]}]},{level:2,title:"8.VUE路由",slug:"_8-vue路由",children:[{level:3,title:"8-0.路由原理",slug:"_8-0-路由原理",children:[]},{level:3,title:"8-1.路由概述",slug:"_8-1-路由概述",children:[]},{level:3,title:"8-2.定义一个基本的路由",slug:"_8-2-定义一个基本的路由",children:[]},{level:3,title:"8-3.路由重定向",slug:"_8-3-路由重定向",children:[]},{level:3,title:"8-4.编程式导航",slug:"_8-4-编程式导航",children:[]},{level:3,title:"8-5.路由传参",slug:"_8-5-路由传参",children:[]},{level:3,title:"8-6.嵌套路由",slug:"_8-6-嵌套路由",children:[]},{level:3,title:"8-7.命名路由",slug:"_8-7-命名路由",children:[]},{level:3,title:"8-8.命名视图",slug:"_8-8-命名视图",children:[]},{level:3,title:"8-9.路由中监视当前路由的路径",slug:"_8-9-路由中监视当前路由的路径",children:[]}]},{level:2,title:"9.前端工程化",slug:"_9-前端工程化",children:[{level:3,title:"各种方式搭建脚手架",slug:"各种方式搭建脚手架",children:[]},{level:3,title:"vue脚手架目录说明",slug:"vue脚手架目录说明",children:[]},{level:3,title:"9-0.项目基础配置",slug:"_9-0-项目基础配置",children:[]},{level:3,title:"9-1.导入less",slug:"_9-1-导入less",children:[]},{level:3,title:"9-2.导入element",slug:"_9-2-导入element",children:[]},{level:3,title:"9-3.两种不同的组件配置",slug:"_9-3-两种不同的组件配置",children:[]},{level:3,title:"9-4.较为全面的路由配置",slug:"_9-4-较为全面的路由配置",children:[]}]}],git:{}}},830:(n,s,a)=>{a.r(s),a.d(s,{default:()=>es});var p=a(6252),t=a(3577);const e=(0,p.uE)('<h1 id="vue-js简介" tabindex="-1"><a class="header-anchor" href="#vue-js简介" aria-hidden="true">#</a> Vue.js简介</h1><ul><li>一套用于构建用户界面的<strong>渐进式框架</strong></li><li>Vue 被设计为可以自底向上逐层应用</li><li>Vue 的核心库只关注视图层</li></ul><p><strong>按需导入</strong></p><p>Vue是三大前端流行框架之一</p><p>声明式编程，符合MVC的设计</p><h3 id="vue技术栈" tabindex="-1"><a class="header-anchor" href="#vue技术栈" aria-hidden="true">#</a> <code>vue技术栈</code></h3><table><thead><tr><th><strong><code>web技术栈</code></strong></th><th><strong><code>移动端技术栈</code></strong></th></tr></thead><tbody><tr><td>VUE基础(语法/组件)</td><td>VUE基础(语法/组件)</td></tr><tr><td>VUE_Router----路由</td><td>VUE_Router----路由</td></tr><tr><td>axios-----交互</td><td>axios-----交互</td></tr><tr><td>webpakage----打包工具</td><td>webpakage----打包工具</td></tr><tr><td>Element UI------UI框架(iview UI | HeyUI | Ant Design of Vue | AmazeUI | MuseUI )</td><td>EEUI----UI框架(Vant https://vant-contrib.gitee.io/vant/#/zh-CN/ )</td></tr><tr><td>VUEX------数据共享</td><td>VUEX------数据共享</td></tr></tbody></table><h3 id="解决什么问题" tabindex="-1"><a class="header-anchor" href="#解决什么问题" aria-hidden="true">#</a> <code>解决什么问题</code></h3><blockquote><blockquote><p>前端渲染的方式：</p><p>1.原生字符串拼接: 容易拼接出错，且不同的人代码风格不同，项目换人后，较难维护</p><p>2.模版引擎: 解决了代码可读性问题，但是仍然容易出错，且没有专门的事件机制</p><p>3.vue模版语法</p></blockquote><p>vue模版语法有效的解决了上述问题</p></blockquote>',9),o=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210827104742406",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210827104742406.png",data:"aurora"})],-1),l=(0,p._)("p",null,"vue工作原理",-1),c=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210827171240521",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210827171240521.png",data:"aurora"})],-1),u=(0,p.uE)('<h2 id="_1-安装" tabindex="-1"><a class="header-anchor" href="#_1-安装" aria-hidden="true">#</a> 1.安装</h2><p>离线：使用页面的script标签进行导入下载好的vue.js文档(https://cn.vuejs.org/js/vue.js)</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>文件路径/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>在线:</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="vue初体验" tabindex="-1"><a class="header-anchor" href="#vue初体验" aria-hidden="true">#</a> <code>VUE初体验</code></h3>',6),r=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210827101732307",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210827101732307.png",data:"aurora"})],-1),i=(0,p._)("h2",{id:"_2-vue实例",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#_2-vue实例","aria-hidden":"true"},"#"),(0,p.Uk)(" 2.Vue实例")],-1),k=(0,p._)("h3",{id:"基本概念",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#基本概念","aria-hidden":"true"},"#"),(0,p.Uk)(" 基本概念")],-1),b=(0,p._)("blockquote",null,[(0,p._)("p",null,"MVVM:"),(0,p._)("p",null,"m--model: 模型"),(0,p._)("p",null,"v--view： 视图"),(0,p._)("p",null,"vm--viewModel: 模型视图，介于模型和视图之间的东西，起到桥梁作用，使得模型和视图能够分开，也能保持通讯")],-1),m=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210831004055590",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210831004055590.png",data:"aurora"})],-1),g=(0,p.uE)('<h3 id="创建" tabindex="-1"><a class="header-anchor" href="#创建" aria-hidden="true">#</a> 创建</h3><p>每个 Vue 应用都是通过用 <code>Vue</code> 函数创建一个新的 <strong>Vue 实例</strong>开始的：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span>\t vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token comment">// 选项</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="数据与方法" tabindex="-1"><a class="header-anchor" href="#数据与方法" aria-hidden="true">#</a> 数据与方法</h3><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>data的两种方式:\n//数据对象\ndata:{\n    \n}\n\n//数据函数方法\ndata() {\n    return {}\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><strong>对象必须是纯粹的对象 (含有零个或多个的 key/value 对)</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 我们的数据对象</span>\n<span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>\n\n<span class="token comment">// 该对象被加入到一个 Vue 实例中</span>\n<span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">data</span><span class="token operator">:</span> data\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 获得这个实例上的 property</span>\n<span class="token comment">// 返回源数据中对应的字段</span>\nvm<span class="token punctuation">.</span>a <span class="token operator">==</span> data<span class="token punctuation">.</span>a <span class="token comment">// =&gt; true</span>\n\n<span class="token comment">// 设置 property 也会影响到原始数据</span>\nvm<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">2</span>\ndata<span class="token punctuation">.</span>a <span class="token comment">// =&gt; 2</span>\n\n<span class="token comment">// ……反之亦然</span>\ndata<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">3</span>\nvm<span class="token punctuation">.</span>a <span class="token comment">// =&gt; 3</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>如果你知道你后面需要一个 property，但是一开始它为空或不存在，那么你仅需要设置一些初始值</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">newTodoText</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">visitCount</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">hideCompletedTodos</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">todos</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token keyword">null</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>如果要阻止修改现有的property的行为，那么可以使用Object.freeze()</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>\n<span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#example&#39;</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">data</span><span class="token operator">:</span> data\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nvm<span class="token punctuation">.</span>$data <span class="token operator">===</span> data <span class="token comment">// =&gt; true</span>\nvm<span class="token punctuation">.</span>$el <span class="token operator">===</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;example&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; true</span>\n\n<span class="token comment">// $watch 是一个实例方法  监听该值</span>\nvm<span class="token punctuation">.</span><span class="token function">$watch</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">newValue<span class="token punctuation">,</span> oldValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 这个回调将在 `vm.a` 改变后调用</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="生命周期钩子" tabindex="-1"><a class="header-anchor" href="#生命周期钩子" aria-hidden="true">#</a> 生命周期钩子</h3><ul><li>created:在实例创建完成后立即执行，</li><li>beforeMount:在挂载之前被调用，相关的渲染函数首次被调用</li><li>mounted:el被新创建的vm.$el替换，挂载成功</li><li>beforeUpdate:数据更新的调用</li><li>updated:组件DOM已经更新，组件更新完毕</li></ul><p><strong>不要在选项 property 或回调上使用箭头函数 =&gt;,因为这样无法使用this指向Vue实例</strong></p><h2 id="_3-指令" tabindex="-1"><a class="header-anchor" href="#_3-指令" aria-hidden="true">#</a> 3.指令</h2><h3 id="指令概念" tabindex="-1"><a class="header-anchor" href="#指令概念" aria-hidden="true">#</a> 指令概念</h3><ul><li>本质就是自定义属性</li><li>Vue中指令都是以 v- 开头</li></ul><h4 id="插值" tabindex="-1"><a class="header-anchor" href="#插值" aria-hidden="true">#</a> 插值</h4><p>数据绑定最常见的形式就是使用“Mustache”语法 (双大括号) 的文本插值：</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>Message: {{ msg }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>vue的指令： v- 开头的特殊属性 作用是：将dom和数据进行响应</p><h4 id="v-cloak" tabindex="-1"><a class="header-anchor" href="#v-cloak" aria-hidden="true">#</a> v-cloak</h4><ul><li><p>防止页面加载时出现闪烁问题</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/css<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n  <span class="token comment">/* \n    1、通过属性选择器 选择到 带有属性 v-cloak的标签  让他隐藏\n */</span>\n  <span class="token selector">[v-cloak]</span><span class="token punctuation">{</span>\n    <span class="token comment">/* 元素隐藏    */</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!-- 2、 让带有插值 语法的   添加 v-cloak 属性 \n         在 数据渲染完场之后，v-cloak 属性会被自动去除，\n         v-cloak一旦移除也就是没有这个属性了  属性选择器就选择不到该标签\n\t\t 也就是对应的标签会变为可见\n    --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>  <span class="token attr-name">v-cloak</span>  <span class="token punctuation">&gt;</span></span>{{msg}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">//  el   指定元素 id 是 app 的元素  </span>\n      <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>\n      <span class="token comment">//  data  里面存储的是数据</span>\n      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&#39;Hello Vue&#39;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div></li></ul><h4 id="v-pre" tabindex="-1"><a class="header-anchor" href="#v-pre" aria-hidden="true">#</a> v-pre</h4><ul><li>显示原始信息跳过编译过程</li><li>跳过这个元素和它的子元素的编译过程。</li><li><strong>一些静态的内容不需要编译加这个指令可以加快渲染</strong></li></ul><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-pre</span><span class="token punctuation">&gt;</span></span>{{ this will not be compiled }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>    \n\t<span class="token comment">&lt;!--  显示的是{{ this will not be compiled }}  --&gt;</span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-pre</span><span class="token punctuation">&gt;</span></span>{{msg}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>  \n     <span class="token comment">&lt;!--   即使data里面定义了msg这里仍然是显示的{{msg}}  --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&#39;Hello Vue.js&#39;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h4 id="v-once" tabindex="-1"><a class="header-anchor" href="#v-once" aria-hidden="true">#</a> <strong>v-once</strong></h4><ul><li>执行一次性的插值【当数据改变时，插值处的内容不会继续更新】</li></ul><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>  <span class="token comment">&lt;!-- 即使data里面定义了msg 后期我们修改了 仍然显示的是第一次data里面存储的数据即 Hello Vue.js  --&gt;</span>\n     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-once</span><span class="token punctuation">&gt;</span></span>{{ msg}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>    \n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&#39;Hello Vue.js&#39;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h4 id="v-text" tabindex="-1"><a class="header-anchor" href="#v-text" aria-hidden="true">#</a> v-text</h4>',30),d=(0,p.uE)('<h5 id="作用" tabindex="-1"><a class="header-anchor" href="#作用" aria-hidden="true">#</a> 作用</h5><p>​ 将v-text=&quot;&quot;内部的变量渲染(覆盖)到标签的内部</p><h5 id="用法" tabindex="-1"><a class="header-anchor" href="#用法" aria-hidden="true">#</a> 用法</h5><p>​ 在标签内部给定v-text=&quot;绑定到data的键&quot;</p><h5 id="作用机理" tabindex="-1"><a class="header-anchor" href="#作用机理" aria-hidden="true">#</a> 作用机理</h5><p>​ v-text实际上是将指定键的值给到元素的InnerText属性</p><h5 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项" aria-hidden="true">#</a> 注意事项</h5><p>​ 只能用于元素的InnerText属性能够接收数据的元素</p>',8),h={id:"v-text和-的区别",tabindex:"-1"},v=(0,p._)("a",{class:"header-anchor",href:"#v-text和-的区别","aria-hidden":"true"},"#",-1),y=(0,p._)("li",null,"里面都能够放置表达式|表达式",-1),q=(0,p._)("code",null,"<style>",-1),f=(0,p.Uk)("里面设置"),w=(0,p._)("code",null,"[v-cloak]{display:none;}",-1),_=(0,p.uE)('<h4 id="v-html" tabindex="-1"><a class="header-anchor" href="#v-html" aria-hidden="true">#</a> v-html</h4><h5 id="作用-1" tabindex="-1"><a class="header-anchor" href="#作用-1" aria-hidden="true">#</a> 作用</h5><p>​ 将v-html=&quot;&quot;内部的变量渲染到标签的内部</p><h5 id="作用机理-1" tabindex="-1"><a class="header-anchor" href="#作用机理-1" aria-hidden="true">#</a> 作用机理</h5><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>v-html实际上是将指定键的值给到元素的innerHtml属性\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h5 id="注意事项-1" tabindex="-1"><a class="header-anchor" href="#注意事项-1" aria-hidden="true">#</a> 注意事项</h5><p>​ 只能用给innerHtml能接收值得元素赋值</p><p>​ v-html会覆盖标签体的值</p><h4 id="v-model" tabindex="-1"><a class="header-anchor" href="#v-model" aria-hidden="true">#</a> v-model</h4><h5 id="作用-2" tabindex="-1"><a class="header-anchor" href="#作用-2" aria-hidden="true">#</a> 作用</h5><p>​ <strong>双向绑定指令</strong>，限制在 <code>&lt;input&gt;、&lt;select&gt;、&lt;textarea&gt;、components</code>中使用</p><blockquote><ul><li>当数据发生变化的时候，视图也就发生变化</li><li>当视图发生变化的时候，数据也会跟着同步变化</li></ul></blockquote><h5 id="注意事项-2" tabindex="-1"><a class="header-anchor" href="#注意事项-2" aria-hidden="true">#</a> 注意事项</h5><p>​ 他不能用在纯展示信息的元素上，否则会报错</p><h5 id="底层原理" tabindex="-1"><a class="header-anchor" href="#底层原理" aria-hidden="true">#</a> 底层原理</h5><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>msg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@input</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>shuru<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>msg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@input</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>msg = $event.target.value<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&quot;哈麻皮&quot;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token function">shuru</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> \n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h4 id="v-if" tabindex="-1"><a class="header-anchor" href="#v-if" aria-hidden="true">#</a> v-if</h4><h5 id="作用-3" tabindex="-1"><a class="header-anchor" href="#作用-3" aria-hidden="true">#</a> 作用</h5><p>​ 根据不同的条件对数据显示或隐藏</p><h5 id="作用机理-2" tabindex="-1"><a class="header-anchor" href="#作用机理-2" aria-hidden="true">#</a> 作用机理</h5><p>​ 当v-if条件满足时对应的元素或数据进行渲染</p><h5 id="注意事项-3" tabindex="-1"><a class="header-anchor" href="#注意事项-3" aria-hidden="true">#</a> 注意事项</h5><p>​ v-else-if 或 v-else 依托于 v-if</p><h5 id="适用场景" tabindex="-1"><a class="header-anchor" href="#适用场景" aria-hidden="true">#</a> 适用场景</h5><p>​ 后台给的数据对应了不同的前端展示</p><h4 id="v-show" tabindex="-1"><a class="header-anchor" href="#v-show" aria-hidden="true">#</a> v-show</h4><h5 id="作用-4" tabindex="-1"><a class="header-anchor" href="#作用-4" aria-hidden="true">#</a> 作用</h5><p>​ 判断条件是否成立，成立就显示，不成立则不显示</p><h5 id="作用机理-3" tabindex="-1"><a class="header-anchor" href="#作用机理-3" aria-hidden="true">#</a> 作用机理</h5><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>v-show是通过添加行内样式style=&quot;display:none&quot;来隐藏\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h5 id="v-if和v-show的区别" tabindex="-1"><a class="header-anchor" href="#v-if和v-show的区别" aria-hidden="true">#</a> v-if和v-show的区别</h5><p>​ v-if:先进行判断再渲染到dom中，如果没有满足就不渲染</p><p>​ v-show:不管是否满足，首先渲染在页面 然后通过判断来是否添加display:none</p><h5 id="使用场景上的区别" tabindex="-1"><a class="header-anchor" href="#使用场景上的区别" aria-hidden="true">#</a> 使用场景上的区别</h5><p>​ v-if: <strong>保密性较强时</strong>，使用v-if</p><p>​ 需要<strong>反复渲染dom，对性能消耗较大</strong></p><p>​ v-show:<strong>保密性较低</strong>，使用v-show</p><p>​ <strong>只是对dom的显示进行设置</strong>，所以性能较高，但安全性不高</p><h4 id="v-on" tabindex="-1"><a class="header-anchor" href="#v-on" aria-hidden="true">#</a> v-on</h4><h5 id="缩写" tabindex="-1"><a class="header-anchor" href="#缩写" aria-hidden="true">#</a> 缩写 @</h5><h5 id="作用-5" tabindex="-1"><a class="header-anchor" href="#作用-5" aria-hidden="true">#</a> 作用</h5><p>​ 将事件绑定至vm的实例中</p><h5 id="使用方式" tabindex="-1"><a class="header-anchor" href="#使用方式" aria-hidden="true">#</a> 使用方式</h5><ol><li>绑定函数</li><li>绑定内联语句</li></ol><h5 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h5><p>​ $event 就是事件本身 该形参的位置完全无关紧要</p><h5 id="事件修饰符" tabindex="-1"><a class="header-anchor" href="#事件修饰符" aria-hidden="true">#</a> 事件修饰符</h5><ul><li>在事件处理程序中调用 <code>event.preventDefault()</code> 或 <code>event.stopPropagation()</code> 是非常常见的需求。</li><li>Vue 不推荐我们操作DOM 为了解决这个问题，Vue.js 为 <code>v-on</code> 提供了<strong>事件修饰符</strong></li><li>修饰符是由点开头的指令后缀来表示的</li></ul><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token comment">&lt;!-- 阻止单击事件继续传播 --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click.stop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>doThis<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token comment">&lt;!-- 提交事件不再重载页面 --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name"><span class="token namespace">v-on:</span>submit.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onSubmit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token comment">&lt;!-- 修饰符可以串联   即阻止冒泡也阻止默认事件 --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click.stop.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>doThat<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token comment">&lt;!-- 只当在 event.target 是当前元素自身时触发处理函数 --&gt;</span>\n<span class="token comment">&lt;!-- 即事件不是从内部元素触发的 --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click.self</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>doThat<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n\n使用修饰符时，顺序很重要；相应的代码会以同样的顺序产生。因此，用 v-on:click.prevent.self 会阻止所有的点击，而 v-on:click.self.prevent 只会阻止对元素自身的点击。\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h5 id="按键修饰符" tabindex="-1"><a class="header-anchor" href="#按键修饰符" aria-hidden="true">#</a> 按键修饰符</h5><ul><li>在做项目中有时会用到键盘事件，在监听键盘事件时，我们经常需要检查详细的按键。Vue 允许为 <code>v-on</code> 在监听键盘事件时添加按键修饰符</li></ul><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token comment">&lt;!-- 只有在 `keyCode` 是 13 时调用 `vm.submit()` --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name"><span class="token namespace">v-on:</span>keyup.13</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n\n<span class="token comment">&lt;!-- -当点击enter 时调用 `vm.submit()` --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name"><span class="token namespace">v-on:</span>keyup.enter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n\n<span class="token comment">&lt;!--当点击enter或者space时  时调用 `vm.alertMe()`   --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">v-on:</span>keyup.enter.space</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>alertMe<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>\n\n常用的按键修饰符\n.enter =&gt;    enter键\n.tab =&gt; tab键\n.delete (捕获“删除”和“退格”按键) =&gt;  删除键\n.esc =&gt; 取消键\n.space =&gt;  空格键\n.up =&gt;  上\n.down =&gt;  下\n.left =&gt;  左\n.right =&gt;  右\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n\t<span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n              <span class="token function-variable function">submit</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token function-variable function">alertMe</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h5 id="自定义按键修饰符别名" tabindex="-1"><a class="header-anchor" href="#自定义按键修饰符别名" aria-hidden="true">#</a> 自定义按键修饰符别名</h5><ul><li>在Vue中可以通过<code>config.keyCodes</code>自定义按键修饰符别名</li></ul><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    预先定义了keycode 116（即F5）的别名为f5，因此在文字输入框中按下F5，会触发prompt方法\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">v-on:</span>keydown.f5</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>prompt()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n\t\n    Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>keyCodes<span class="token punctuation">.</span>f5 <span class="token operator">=</span> <span class="token number">116</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">let</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token function-variable function">prompt</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;我是 F5！&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="v-bind" tabindex="-1"><a class="header-anchor" href="#v-bind" aria-hidden="true">#</a> v-bind</h4><h5 id="缩写-1" tabindex="-1"><a class="header-anchor" href="#缩写-1" aria-hidden="true">#</a> 缩写 :</h5><h5 id="修饰符" tabindex="-1"><a class="header-anchor" href="#修饰符" aria-hidden="true">#</a> 修饰符</h5><ul><li><code>.prop</code> - 作为 DOM property 绑定而不是作为 attribute 绑定</li><li><code>.camel</code> - 将 kebab-case attribute 名转换为 camelCase。</li><li><code>.sync</code> 语法糖，会扩展成一个更新父组件绑定值的 <code>v-on</code> 侦听器。</li></ul><h5 id="作用-6" tabindex="-1"><a class="header-anchor" href="#作用-6" aria-hidden="true">#</a> 作用</h5><p>​ 主要用于JavaScript Object绑定到属性,从而通过数据对元素操作属性</p><p>​ 多个属性可以多个对象的方式来进行绑定，也可以通过数组来绑定</p><p>​ 支持三元表达式</p><h4 id="数组" tabindex="-1"><a class="header-anchor" href="#数组" aria-hidden="true">#</a> 数组</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>arrays<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>bianliang<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h5 id="元素移除" tabindex="-1"><a class="header-anchor" href="#元素移除" aria-hidden="true">#</a> 元素移除</h5><blockquote><h6 id="pop-移除数组末尾的元素" tabindex="-1"><a class="header-anchor" href="#pop-移除数组末尾的元素" aria-hidden="true">#</a> pop 移除数组末尾的元素</h6><h6 id="shift-从头移除" tabindex="-1"><a class="header-anchor" href="#shift-从头移除" aria-hidden="true">#</a> shift 从头移除</h6></blockquote><h5 id="元素增加" tabindex="-1"><a class="header-anchor" href="#元素增加" aria-hidden="true">#</a> 元素增加</h5><blockquote><h6 id="unshift-从头开始加" tabindex="-1"><a class="header-anchor" href="#unshift-从头开始加" aria-hidden="true">#</a> unshift 从头开始加</h6><h6 id="push-向后追加元素" tabindex="-1"><a class="header-anchor" href="#push-向后追加元素" aria-hidden="true">#</a> push 向后追加元素</h6></blockquote><h5 id="splice" tabindex="-1"><a class="header-anchor" href="#splice" aria-hidden="true">#</a> splice</h5><p>splice(起始下标(0维数组),删除数量,删除后替换的变量)</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>arrays<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>bianliang<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h5 id="sort" tabindex="-1"><a class="header-anchor" href="#sort" aria-hidden="true">#</a> sort</h5><p>对数组进行排序，sort中如果需要乱序，就需要通过返回随机数实现</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>arrays<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    a <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    b <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> a <span class="token operator">-</span> b<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h5 id="reverse" tabindex="-1"><a class="header-anchor" href="#reverse" aria-hidden="true">#</a> reverse</h5><p>将数组反转</p><h5 id="filter" tabindex="-1"><a class="header-anchor" href="#filter" aria-hidden="true">#</a> filter</h5><p>传入的元素符合条件就留下，否则清除，但不会影响原始数组的数据，它会返回解析过后的数组</p><h6 id="语法" tabindex="-1"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法</h6><p>filter((元素)=&gt;{ return 筛选条件; }):</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>arrays <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>arrays<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> item <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="v-for" tabindex="-1"><a class="header-anchor" href="#v-for" aria-hidden="true">#</a> v-for</h4><blockquote><ul><li><strong>不推荐</strong>同时使用 <code>v-if</code> 和 <code>v-for</code></li><li>当 <code>v-if</code> 与 <code>v-for</code> 一起使用时，<code>v-for</code> 具有比 <code>v-if</code> 更高的优先级。</li></ul></blockquote><h5 id="作用-7" tabindex="-1"><a class="header-anchor" href="#作用-7" aria-hidden="true">#</a> 作用</h5><p>​ 基于源数据多次渲染元素或模板块,被标记的元素就生成哪种元素</p><h5 id="用法-1" tabindex="-1"><a class="header-anchor" href="#用法-1" aria-hidden="true">#</a> 用法</h5><p>​ v-for = &#39; () in 被遍历对象 &#39;</p><h5 id="形参区别" tabindex="-1"><a class="header-anchor" href="#形参区别" aria-hidden="true">#</a> 形参区别</h5><p>​ 遍历数字: (元素,下标) ​ 遍历对象: (属性名,属性值,属性下标) ​ 遍历数组对象:(数组下标,元素对象)</p><h5 id="key" tabindex="-1"><a class="header-anchor" href="#key" aria-hidden="true">#</a> :key</h5><p>为避免有时未加:Key修饰符导致的Vue对Dom算法渲染错误,通过加上:Key修饰符(唯一的标识)来解决</p><p>例如以下例子</p><p>没有添加:key修饰符之前</p><p>添加后:</p><p>结论：</p><p>​ 当用户随机选中一条数据后，单击添加，按照正常逻辑，增加后，单选按钮应该跟随之前选中的信息，而这里并没有按照合理的流程进行操作，这就是因为Vue对Dom的算法操作导致的渲染问题,所以根据需求进行添加:key修饰符，大部分情况下是添加的</p><p>​ :key使用的注意事项:</p><p>​ 它的值不能是对象(Object)</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>newName<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>write<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>clickUnshift<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>增加<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!--这里演示加不加 :key=&#39;boy.id&#39;的区别--&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(boy,index) in boys<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>radio<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>boyBox<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{boy}}——{{index}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token keyword">const</span> vue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">num</span><span class="token operator">:</span> <span class="token number">9</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">arrays</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;项1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;项2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;项3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;项4&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;项5&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">newName</span><span class="token operator">:</span> <span class="token string">&quot;翠花&quot;</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">boys</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n                <span class="token punctuation">{</span>\n                    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;小毛&quot;</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;小巴&quot;</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">16</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;小李&quot;</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">12</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;小王&quot;</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">24</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token function">clickUnshift</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token comment">//先根据输入的值生成对象</span>\n                <span class="token keyword">let</span> newBoy <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>boys<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>newName<span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n                <span class="token comment">//将新生成的对象加入数组头部</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>boys<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>newBoy<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div><h4 id="自定义指令" tabindex="-1"><a class="header-anchor" href="#自定义指令" aria-hidden="true">#</a> 自定义指令</h4><h5 id="作用-8" tabindex="-1"><a class="header-anchor" href="#作用-8" aria-hidden="true">#</a> 作用</h5><p>​ 自己注册一个指令到Vue全局或局部</p><h5 id="用法-2" tabindex="-1"><a class="header-anchor" href="#用法-2" aria-hidden="true">#</a> 用法</h5><p>​ 注册全局指令: Vue.directive( id, [definition] )</p><p>​ 注册局部指令:</p><p>在Vue选项中添加</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>directives: {\n    指令名称(元素, 绑定, 新虚拟节点, 旧虚拟节点) {\n        \n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h5 id="directives和directive的区别" tabindex="-1"><a class="header-anchor" href="#directives和directive的区别" aria-hidden="true">#</a> <strong>directives</strong>和<strong>directive</strong>的区别</h5><h6 id="创建方式" tabindex="-1"><a class="header-anchor" href="#创建方式" aria-hidden="true">#</a> 创建方式</h6><p>一个是用Vue大类进行创建，一个是通过Vue的选项进行创建的</p><p>全局自定义指令的创建相对局部自定义指令的创建要复杂一点</p>',112),x=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210429102407804",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210429102407804.png",data:"aurora"})],-1),j=(0,p.uE)('<h6 id="绑定的方式" tabindex="-1"><a class="header-anchor" href="#绑定的方式" aria-hidden="true">#</a> 绑定的方式</h6><p>全局自定义指令绑定是可以将事件或属性进行分开绑定</p><p>​ 关于事件(元素的聚焦、失焦、悬停等)的绑定在inserted中</p><p>​ 关于属性(元素的样式、属性)的绑定在bind中</p><p>局部自定义指令绑定是将update和bind合在一起</p><h2 id="_4-过滤器" tabindex="-1"><a class="header-anchor" href="#_4-过滤器" aria-hidden="true">#</a> 4.过滤器</h2><h3 id="作用-9" tabindex="-1"><a class="header-anchor" href="#作用-9" aria-hidden="true">#</a> 作用</h3><p>​ 可被用于文本格式化</p><h3 id="适用场景-1" tabindex="-1"><a class="header-anchor" href="#适用场景-1" aria-hidden="true">#</a> 适用场景</h3><p>​ 商品展示时的单位转换</p><p>​ 日期的格式转换s</p><h3 id="语法-1" tabindex="-1"><a class="header-anchor" href="#语法-1" aria-hidden="true">#</a> 语法</h3>',12),z=(0,p.uE)('<h3 id="例子" tabindex="-1"><a class="header-anchor" href="#例子" aria-hidden="true">#</a> 例子</h3><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>{{today| dateFilter}}\n\n------\nfilters: {\n    dateFilter(date) {\n        return moment(date).format(&#39;YYYY年MM月DD日 hh:mm:ss&#39;);\n    }\n},\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="_5-计算属性" tabindex="-1"><a class="header-anchor" href="#_5-计算属性" aria-hidden="true">#</a> 5.计算属性</h2><h5 id="解决问题" tabindex="-1"><a class="header-anchor" href="#解决问题" aria-hidden="true">#</a> 解决问题</h5><blockquote><p>在插值中使用表达式,可读性差，不利于维护</p><p>通过get() 获取相关属性的变化计算自己，通过set()监视自己的属性的主动变化(因此可以用来影响关联属性)</p></blockquote><h5 id="作用-10" tabindex="-1"><a class="header-anchor" href="#作用-10" aria-hidden="true">#</a> 作用</h5><p>​ 通过关联属性对原始属性进行变更</p><h5 id="用法-3" tabindex="-1"><a class="header-anchor" href="#用法-3" aria-hidden="true">#</a> 用法</h5><p>​ Vue选项computed:{}</p>',9),V=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210430085821451",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210430085821451.png",data:"aurora"})],-1),E=(0,p.uE)('<p><strong>计算属性是基于它们的响应式依赖进行缓存的,只在相关响应式依赖发生改变时它们才会重新求值。</strong></p><p><strong>计算属性必须返回一个结果（计算过后的结果）</strong></p><p>计算属性作为函数出现时默认的是：</p><p>​ 这个属性对象的getter</p><p>计算属性对象的setter其实是一个监视器，只要计算属性的本体发生变化,就会触发</p><h5 id="应用场景" tabindex="-1"><a class="header-anchor" href="#应用场景" aria-hidden="true">#</a> 应用场景</h5><p>​ 面向不同国家的一个商城，里面的价格只有一份，不同国家的人看到的货币都是经过汇率换算过的结果，这时就可以使用到计算属性进行计算</p><p>PS:单选项中访问其他选项的属性或方法都需要通过this指向vm实例再通过实例得到其他选项中的属性或方法</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    第一个输入框 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>\n    第二个输入框 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>\n    前两个数字相加的结果 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>result<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">computed</span><span class="token operator">:</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">result</span><span class="token operator">:</span><span class="token punctuation">{</span>\n                <span class="token comment">//这其实是result属性的回调，回调的时机是获取当前属性值的时候，作用是将返回值作为属性值</span>\n                <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                    <span class="token keyword">let</span> regNum <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d*$</span><span class="token regex-delimiter">/</span></span> <span class="token comment">//申明数字的正则表达式</span>\n                    <span class="token keyword">let</span> num1 <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>input1<span class="token punctuation">)</span>\n                    <span class="token keyword">let</span> num2 <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>input2<span class="token punctuation">)</span>\n                    <span class="token keyword">if</span> <span class="token punctuation">(</span>regNum<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>num1<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> regNum<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                        <span class="token keyword">return</span> num1 <span class="token operator">+</span> num2\n                    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n                        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>input1 <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>input2\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token comment">//这也是一个回调，回调的实际是属性值发生改变的时候，监视当前属性值的变化，同步更新相关属性值</span>\n                <span class="token function">set</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">{</span>\n                    <span class="token keyword">let</span> regNum <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d*$</span><span class="token regex-delimiter">/</span></span> <span class="token comment">//申明数字的正则表达式</span>\n                    <span class="token keyword">let</span> num1 <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>input1<span class="token punctuation">)</span>\n                    <span class="token keyword">let</span> num2 <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>input2<span class="token punctuation">)</span>\n                    <span class="token comment">//如果是数字类型，就转化后相加</span>\n                    <span class="token keyword">if</span> <span class="token punctuation">(</span>regNum<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>num1<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> regNum<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                        <span class="token keyword">this</span><span class="token punctuation">.</span>input1 <span class="token operator">=</span> value <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>input2\n                        <span class="token keyword">this</span><span class="token punctuation">.</span>input2 <span class="token operator">=</span> value <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>input1\n                        value <span class="token operator">=</span> num1 <span class="token operator">+</span> num2\n                        <span class="token comment">//如果不是数字类型就拆分字符串</span>\n                    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n                        <span class="token keyword">this</span><span class="token punctuation">.</span>input1<span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>input2<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\n                        <span class="token keyword">this</span><span class="token punctuation">.</span>input2<span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>input1<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>\n                        value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>input1 <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>input2\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">input1</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">input2</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span>\n        <span class="token punctuation">}</span>\n\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div><h2 id="_6-侦听器" tabindex="-1"><a class="header-anchor" href="#_6-侦听器" aria-hidden="true">#</a> 6.侦听器</h2><p>观察和响应 Vue 实例上的数据变动,计算属性也是如此</p><h5 id="侦听器的参数" tabindex="-1"><a class="header-anchor" href="#侦听器的参数" aria-hidden="true">#</a> 侦听器的参数</h5><p>参数1：更改后的值,参数2:更改前的值</p><h5 id="侦听器与计算属性的区别" tabindex="-1"><a class="header-anchor" href="#侦听器与计算属性的区别" aria-hidden="true">#</a> 侦听器与计算属性的区别</h5><p>侦听器侦听对象的本身，并且在其他的选项中已经存在而计算属性不用</p><ol><li>侦听器，侦听自己，当值发生变化的时候会触发，有两个参数（新值，旧值）</li><li>计算属性，侦听关联属性，当关联属性的值发生变化的时候，就得到一个值</li><li>计算属性具有缓存，证明方式是多次调用同一个计算属性，观察执行多少次，侦听器是每次变化都会执行</li><li>每个计算属性都有两个回调函数，一个是setter，一个是getter</li><li>get用来返回当前属性的值，不会影响原始属性的值</li><li>set用于监视属性，一旦属性改变，就会调用set，就会将新的值传入set(value)</li></ol><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>现在的数字是:{{num}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>num++<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>num++<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>这个数字是一个{{result}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">num</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">result</span><span class="token operator">:</span> <span class="token string">&quot;奇数&quot;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token comment">//监听某个值的变化</span>\n            <span class="token function">num</span><span class="token punctuation">(</span><span class="token parameter">newValue<span class="token punctuation">,</span> oldValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>newValue <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>result <span class="token operator">=</span> <span class="token string">&quot;偶数&quot;</span>\n                <span class="token punctuation">}</span>\n                <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>result <span class="token operator">=</span> <span class="token string">&quot;奇数&quot;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="_7-vue组件" tabindex="-1"><a class="header-anchor" href="#_7-vue组件" aria-hidden="true">#</a> 7.Vue组件</h2><blockquote><p>模块：可复用的代码块</p><p>组件：可复用的UI</p></blockquote><p>用template声明一个需要复用的html结构 组件没有挂载点 组件具有单根性,如果传入多个元素，就只渲染第一个元素，为了确保不出错，就直接使用div进行包裹 全局组件 可以在不同的vue实例间进行调用</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&quot;组件名称&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">单标签</span><span class="token template-punctuation string">`</span></span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_7-1-组件的定义" tabindex="-1"><a class="header-anchor" href="#_7-1-组件的定义" aria-hidden="true">#</a> 7-1.组件的定义</h3><p>组件的定义有三种方式：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 注册组件，传入一个扩展过的构造器</span>\nVue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;my-component&#39;</span><span class="token punctuation">,</span> Vue<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 注册组件，传入一个选项对象 (自动调用 Vue.extend)</span>\nVue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;my-component&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 获取注册的组件 (始终返回构造器)</span>\n<span class="token keyword">var</span> MyComponent <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;my-component&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="_7-1-1-利用构造器创建子子类-再把子类注册到全局组件" tabindex="-1"><a class="header-anchor" href="#_7-1-1-利用构造器创建子子类-再把子类注册到全局组件" aria-hidden="true">#</a> 7-1-1.利用构造器创建子子类，再把子类注册到全局组件</h4><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!--使用组件--&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>zujian</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>zujian</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token comment">//第一种方式,利用构造器 使用基础 Vue 构造器，创建一个“子类”。参数是一个包含组件选项的对象。</span>\n    <span class="token keyword">const</span> zujian <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;\n           &lt;p&gt;美人不是母胎生&lt;/p&gt;\n           &lt;p&gt;应是桃花树长成&lt;/p&gt;\n        &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token comment">//将zujian注册到全局组件</span>\n    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&quot;zujian&quot;</span><span class="token punctuation">,</span>zujian<span class="token punctuation">)</span>\n\n    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h4 id="_7-1-2-直接注册" tabindex="-1"><a class="header-anchor" href="#_7-1-2-直接注册" aria-hidden="true">#</a> 7-1-2.直接注册</h4><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token comment">&lt;!--使用组件--&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>zujian</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>zujian</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token comment">//直接注册全局组件</span>\n  Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;zujian&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;\n    &lt;p&gt;人间四月芳菲尽&lt;/p&gt;\n    &lt;p&gt;山寺桃花始盛开&lt;/p&gt;\n    &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h4 id="_7-1-3-通过选择器来定义" tabindex="-1"><a class="header-anchor" href="#_7-1-3-通过选择器来定义" aria-hidden="true">#</a> 7-1-3.通过选择器来定义</h4><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!--使用组件--&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>zujian</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>zujian</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token comment">&lt;!--这里是一个template模板标签,专门定义UI结构的--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xiakexing<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>十步杀一人,千里不留行<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>事了拂衣去,深藏功与名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token comment">//通过引入上面&lt;template&gt;标签来注册组件</span>\n    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;zujian&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n        <span class="token comment">//这里用的是反引号,如果用单引号,其实也没问题,就是爆红不好看</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">#xiakexing</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>私有组件的定义方式：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    \n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">组件名</span><span class="token operator">:</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&quot;单根标签&quot;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="_7-2-组件中的结构" tabindex="-1"><a class="header-anchor" href="#_7-2-组件中的结构" aria-hidden="true">#</a> 7-2.组件中的结构</h3><p>由于组件本身就是一个vue实例，所以vue实例该有的它都有</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>zujian</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>zujian</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token comment">//注册一个功能全面的组件</span>\n    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;zujian&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;\n        &lt;el-button type=&quot;primary&quot; @click=&quot;sayName&quot;&gt;点击弹出诗人名字&lt;/el-button&gt;\n        &lt;p&gt;安得世间两全法&lt;/p&gt;\n        &lt;p&gt;不负如来不负卿&lt;/p&gt;\n        &lt;p&gt;{{3.3 | priceFilter}}&lt;/p&gt;\n        &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n        <span class="token comment">//方法</span>\n        <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">{</span>\n            <span class="token function">sayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&#39;这首诗是大情圣仓央嘉措的作品&#39;</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token comment">//过滤器</span>\n        <span class="token literal-property property">filters</span><span class="token operator">:</span><span class="token punctuation">{</span>\n            <span class="token function">priceFilter</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token string">&quot;$&quot;</span> <span class="token operator">+</span> value <span class="token operator">+</span> <span class="token string">&quot;一个蛤蟆皮&quot;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h3 id="_7-3-组件中的data只能是一个function" tabindex="-1"><a class="header-anchor" href="#_7-3-组件中的data只能是一个function" aria-hidden="true">#</a> 7-3.组件中的data只能是一个function</h3><p><strong>一个组件的 <code>data</code> 选项必须是一个函数</strong>，因此每个实例可以维护一份被返回对象的独立的拷贝：</p><blockquote><p>每次return都是一个新的对象</p></blockquote><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!--多个组件的num互不干扰--&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>zujian</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>zujian</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>zujian</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>zujian</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token comment">//注册一个组件</span>\n    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;zujian&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;\n        &lt;p&gt;计数器:&lt;el-button type=&quot;info&quot; @click=&quot;num --&quot;&gt;-&lt;/el-button&gt; &lt;input v-model=&quot;num&quot;&gt; &lt;el-button type=&quot;info&quot; @click=&quot;num ++&quot;&gt;+&lt;/el-button&gt; &lt;/p&gt;\n        &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n        <span class="token comment">//组件中的data是函数才能互不影响</span>\n        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span><span class="token punctuation">{</span>\n                <span class="token literal-property property">num</span><span class="token operator">:</span><span class="token number">1</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><blockquote><p>data中的数据不是私有的时候的问题</p><blockquote><p>问题描述： 如下，在组件的data选项中return外部的obj，这样组件在调用的过程中，数据就会发生共享，这样也更加容易出错</p></blockquote></blockquote><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ok</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ok</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ok</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ok</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token comment">//申明一个变量</span>\n    <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">num</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span>\n    <span class="token comment">//申明一个组件</span>\n    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;ok&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n          &lt;div&gt;\n          &lt;el-tag&gt;{{ num }}&lt;/el-tag&gt;\n          &lt;br&gt;\n          &lt;el-button @click=&quot;addSelf&quot;&gt;点击&lt;/el-button&gt;\n          &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> obj\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token function">addSelf</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>num<span class="token operator">++</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h3 id="_7-4-父组件向子组件传值-子组件使用父组件的数据" tabindex="-1"><a class="header-anchor" href="#_7-4-父组件向子组件传值-子组件使用父组件的数据" aria-hidden="true">#</a> 7-4.父组件向子组件传值(子组件使用父组件的数据)</h3><blockquote><p>注意：无论是子组件自定义事件还是子组件自定义方法，都不支持大小写的驼峰命名</p></blockquote><p>单纯传值：子组件中的props中自定义属性 ====&gt;&gt; 调用子组件标签的时候，通过v-bind绑定子组件自定义的属性实现传值 ===&gt;&gt; 子组件中正常使用值</p><p>props中申明的虽然只能是个字符串，但是这个字符串，可以接收对象/数组/字符串/数字</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!--这里通过强制绑定子组件属性 v-bind:hamapi 对子组件进行传值--&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>zujian</span> <span class="token attr-name">:hamapi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>msg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>zujian</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token comment">//父组件向子组件传值就是在子组件里面申明了子组件标签的一个特殊属性</span>\n    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;zujian&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">props</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;hamapi&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;\n        &lt;p style=&quot;color: red&quot;&gt;看看能不能调用到父组件的内容&lt;/p&gt;\n        &lt;p&gt;{{hamapi}}&lt;/p&gt;\n        &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">msg</span><span class="token operator">:</span><span class="token string">&quot;父组件的内容&quot;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>将父组件传入的值，赋值给子组件，赋值的时候，就直接在data里面，通过 this.$props里面申明的属性取父组件穿过来的值即可</p><div class="language-htmL ext-htmL line-numbers-mode"><pre class="language-htmL"><code>&lt;div id=&quot;app&quot;&gt;\n    &lt;!--这里通过强制绑定子组件属性 v-bind:hamapi 对子组件进行传值--&gt;\n    &lt;zujian :hamapi=&quot;num&quot;&gt;&lt;/zujian&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n&lt;script&gt;\n    //父组件向子组件传值就是在子组件里面申明了子组件标签的一个特殊属性\n    Vue.component(&#39;zujian&#39;,{\n        props:[&#39;hamapi&#39;],\n        template:`&lt;div&gt;\n        &lt;p style=&quot;color: red&quot;&gt;点击修改父组件传入的值&lt;/p&gt;\n        &lt;el-button type=&quot;primary&quot; @click=&quot;subNum ++&quot;&gt;+&lt;/el-button&gt;\n        &lt;p&gt;{{subNum}}&lt;/p&gt;\n        &lt;/div&gt;`,\n        data(){\n            return{\n                //通过this 拿到hamapi的值,并给予msg\n                subNum:this.hamapi\n            }\n        }\n    })\n    const vm = new Vue({\n        el: &quot;#app&quot;,\n        data: {\n            num:3\n        }\n    })\n&lt;/script&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h3 id="_7-5-子组件调用父组件的方法-父组件的方法传递给子组件" tabindex="-1"><a class="header-anchor" href="#_7-5-子组件调用父组件的方法-父组件的方法传递给子组件" aria-hidden="true">#</a> 7-5.子组件调用父组件的方法(父组件的方法传递给子组件)</h3><blockquote><p>注意：无论是子组件自定义事件还是子组件自定义方法，都不支持大小写的驼峰命名</p></blockquote><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!--这里通过强制绑定子组件属性 @子组件自定义方法=&quot;父组件的方法&quot; 实现子组件调用父组件的方法--&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>zujian</span> <span class="token attr-name">:hamapi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>num<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@subevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>parentMethod<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>zujian</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token comment">//父组件向子组件传值就是在子组件里面申明了子组件标签的一个特殊属性</span>\n    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;zujian&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">props</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;hamapi&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;\n        &lt;p style=&quot;color: red&quot;&gt;点击触发父组件的方法&lt;/p&gt;\n        &lt;el-button type=&quot;primary&quot; @click=&quot;sayParent&quot;&gt;触发父组件的方法&lt;/el-button&gt;\n        &lt;p&gt;{{subNum}}&lt;/p&gt;\n        &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span><span class="token punctuation">{</span>\n                <span class="token comment">//通过this 拿到hamapi的值,并给予msg</span>\n                <span class="token literal-property property">subNum</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>hamapi\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">{</span>\n            <span class="token function">sayParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token comment">//通过 this的$emit调用到子组件标签中定义的subevent事件 </span>\n                <span class="token comment">//$emit</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;subevent&#39;</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">num</span><span class="token operator">:</span><span class="token number">3</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">{</span>\n            <span class="token function">parentMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&#39;大家都是蛤蟆皮&#39;</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><h3 id="_7-6-子组件调用父组件方法的时候传参" tabindex="-1"><a class="header-anchor" href="#_7-6-子组件调用父组件方法的时候传参" aria-hidden="true">#</a> 7-6.子组件调用父组件方法的时候传参</h3><p>--子组件修改父组件的数据---</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n父组件的num的值{{num}}\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>zujian</span> <span class="token attr-name">@addanum</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>change<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>zujian</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token comment">//定义一个组件</span>\n    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;zujian&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;\n        &lt;el-button type=&quot;info&quot; @click=&quot;hamapi&quot;&gt;点击给父组件加个数字&lt;/el-button&gt;\n        &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n        <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">{</span>\n            <span class="token function">hamapi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token keyword">let</span> num <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span>\n                <span class="token comment">//通过this.$emit(&#39;自定义方法&#39;,arg1,arg2,arg3...)中的arg给父组件传参,并修改父组件</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&quot;addanum&quot;</span><span class="token punctuation">,</span>num<span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">num</span><span class="token operator">:</span><span class="token number">1</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">{</span>\n            <span class="token function">change</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>num <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>num <span class="token operator">+</span> num\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h3 id="_7-7-兄弟组件之间的通信" tabindex="-1"><a class="header-anchor" href="#_7-7-兄弟组件之间的通信" aria-hidden="true">#</a> 7-7.兄弟组件之间的通信</h3><blockquote><p>关键知识点： 监听事件： 事件中心.$on(&#39;兄弟组件中$emit(中第一个参数)&#39;,兄弟组件中$emit(中第2个参数)) 销毁事件： 事件中心.$off(被$emit()绑定过的第一个参数) 触发事件： 事件中心.$emit(&#39;控制兄弟组件的方法&#39;,传给兄弟组件的参数) 监听事件要写在mounted(){}这个钩子方法里面</p></blockquote>',56),A=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210507235447237",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210507235447237.png",data:"aurora"})],-1),B=(0,p.uE)('<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!--在vm实例也就是事件中心的父组件里面进行注销--&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xiaohui<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>销毁组件间通讯<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!--a组件--&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>azujian</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>azujian</span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!--b组件--&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bzujian</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bzujian</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token comment">//注册全局事件中心</span>\n    <span class="token keyword">let</span> parent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//组件A</span>\n    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&quot;azujian&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                <span class="token literal-property property">num</span><span class="token operator">:</span><span class="token number">0</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;\n            A组件的计数器读数:{{num}} &lt;br&gt;\n            &lt;button @click=&quot;adomchange&quot;&gt;操作B组件的计数器读数&lt;/button&gt;\n        &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n        <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">{</span>\n            <span class="token comment">//写本组件的方法</span>\n            <span class="token function">adomchange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token keyword">let</span> nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span>\n                <span class="token comment">//使用事件中心监听兄弟对象</span>\n                parent<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span>nums<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token comment">//调用组件a的更新的钩子方法</span>\n        <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token comment">//启用事件中心的监听,当bzujian被绑定了aar的那个事件被触发的时候,就调用这个方法</span>\n            parent<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token string">&#39;aar&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>num <span class="token operator">+=</span> num\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token comment">//组件B</span>\n    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&quot;bzujian&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">props</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&quot;counter&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;\n            B组件的计数器读数:{{num}} &lt;br&gt;\n            &lt;button @click=&quot;bdomchange&quot;&gt;操作A组件的计数器读数&lt;/button&gt;\n        &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                <span class="token literal-property property">num</span><span class="token operator">:</span><span class="token number">0</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">{</span>\n            <span class="token comment">//写本组件的方法</span>\n            <span class="token function">bdomchange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token keyword">let</span> nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span>\n                <span class="token comment">//给事件中心绑定一个aar的事件,传入参数</span>\n                parent<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;aar&#39;</span><span class="token punctuation">,</span>nums<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token comment">//调用组件a的更新的钩子方法</span>\n        <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token comment">//启用事件中心对azujian的bar的监听,当azujian里面的 bar触发的时候,就调用这个方法</span>\n            parent<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>num <span class="token operator">+=</span> num\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">{</span>\n            <span class="token function">xiaohui</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token comment">//销毁事件中心对不同事件的绑定</span>\n                parent<span class="token punctuation">.</span><span class="token function">$off</span><span class="token punctuation">(</span><span class="token string">&#39;aar&#39;</span><span class="token punctuation">)</span>\n                parent<span class="token punctuation">.</span><span class="token function">$off</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br></div></div><h3 id="_7-8-采用v-if来实现不同组件的切换" tabindex="-1"><a class="header-anchor" href="#_7-8-采用v-if来实现不同组件的切换" aria-hidden="true">#</a> 7-8.采用v-if来实现不同组件的切换</h3><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!--点击不同的按钮,控制isdenglu的取值--&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isdenglu = true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>---<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isdenglu = false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>denglu</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isdenglu<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>denglu</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>zhuce</span> <span class="token attr-name">v-else</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>zhuce</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token comment">//自定义登录组件</span>\n    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;denglu&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;\n          &lt;el-card&gt;\n          登录组件\n          &lt;/el-card&gt;\n        &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token comment">//自定义注册组件</span>\n    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;zhuce&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;\n          &lt;el-card&gt;\n          注册组件\n          &lt;/el-card&gt;\n        &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">isdenglu</span><span class="token operator">:</span><span class="token boolean">true</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h3 id="_7-9-动态组件" tabindex="-1"><a class="header-anchor" href="#_7-9-动态组件" aria-hidden="true">#</a> 7-9.动态组件</h3><p>采用component标签结合is属性实现不同组件的切换</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token comment">&lt;!--点击修改componentName的值--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>componentName = <span class="token punctuation">&#39;</span>jin<span class="token punctuation">&#39;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>金<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>componentName = <span class="token punctuation">&#39;</span>mu<span class="token punctuation">&#39;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>木<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>componentName = <span class="token punctuation">&#39;</span>shui<span class="token punctuation">&#39;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>水<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>componentName = <span class="token punctuation">&#39;</span>huo<span class="token punctuation">&#39;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>火<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>componentName = <span class="token punctuation">&#39;</span>tu<span class="token punctuation">&#39;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>土<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>\n<span class="token comment">&lt;!--通过引入component组件,实现不同组件的切换--&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>component</span> <span class="token attr-name">:is</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>componentName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>component</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token comment">//金</span>\n    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;jin&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;\n      &lt;el-card&gt;五行:金&lt;/el-card&gt;\n      &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token comment">//木</span>\n    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;mu&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;\n      &lt;el-card&gt;五行:木&lt;/el-card&gt;\n      &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token comment">//水</span>\n    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;shui&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;\n      &lt;el-card&gt;五行:水&lt;/el-card&gt;\n      &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token comment">//火</span>\n    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;huo&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;\n      &lt;el-card&gt;五行:火&lt;/el-card&gt;\n      &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token comment">//土</span>\n    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;tu&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;\n      &lt;el-card&gt;五行:土&lt;/el-card&gt;\n      &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">componentName</span><span class="token operator">:</span><span class="token string">&#39;jin&#39;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div><h3 id="_7-10-插槽" tabindex="-1"><a class="header-anchor" href="#_7-10-插槽" aria-hidden="true">#</a> 7-10.插槽</h3>',7),F=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210506003026446",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210506003026446.png",data:"aurora"})],-1),S=(0,p._)("h4",{id:"_7-10-1-匿名插槽",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#_7-10-1-匿名插槽","aria-hidden":"true"},"#"),(0,p.Uk)(" 7-10-1.匿名插槽")],-1),U=(0,p._)("blockquote",null,[(0,p._)("p",null,"1.使用插槽,插槽的标签名和slot的标签名将不会被渲染,kkl里面的内容会被夹在slot标签里面,"),(0,p._)("p",null,"2.如果slot标签里面有值, 调用插槽的时候,如果不传值就会使用slot标签的默认值，如果传了值就覆盖掉原本的值,"),(0,p._)("p",null,"3.VUE官方2.6之后的v-slot不能开槽，且不会覆盖，且会被渲染出来")],-1),$=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210506003351853",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210506003351853.png",data:"aurora"})],-1),N=(0,p.uE)('<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>zujian</span><span class="token punctuation">&gt;</span></span>\n  <span class="token comment">&lt;!--这里的标签其实要不要无所谓--&gt;</span>\n<span class="token comment">&lt;!--  &lt;span&gt;kkl&lt;/span&gt;--&gt;</span>\n  蛤蟆皮\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>zujian</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token comment">//定义一个组件  组件的模板里面留一个口子,这个口子就是父组件向里面传值的地方</span>\n  Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;zujian&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;\n    &lt;p&gt;憨批的名字是&lt;slot&gt;杰杰&lt;/slot&gt;&lt;/p&gt;\n    &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h4 id="_7-10-2-具名插槽" tabindex="-1"><a class="header-anchor" href="#_7-10-2-具名插槽" aria-hidden="true">#</a> 7-10-2.具名插槽</h4>',2),M=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210911160440750",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210911160440750.png",data:"aurora"})],-1),R=(0,p.uE)('<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>zujian</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name"><span class="token namespace">v-slot:</span>header</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-card</span><span class="token punctuation">&gt;</span></span>这是头部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-card</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>你是风儿<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>我是沙<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>缠缠绵绵<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>到我家<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n    \n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name"><span class="token namespace">v-slot:</span>footer</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-card</span><span class="token punctuation">&gt;</span></span>这页脚<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-card</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>zujian</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token comment">//注册一个全局的组件</span>\n    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;zujian&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;\n         &lt;header&gt;\n          &lt;slot name=&quot;header&quot;&gt;&lt;/slot&gt;\n         &lt;/header&gt;\n\n         &lt;main&gt;\n          &lt;slot&gt;&lt;/slot&gt;\n         &lt;/main&gt;\n\n         &lt;footer&gt;\n         &lt;slot name=&quot;footer&quot;&gt;&lt;/slot&gt;\n         &lt;/footer&gt;\n        &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><h4 id="_7-10-3-插槽作用域" tabindex="-1"><a class="header-anchor" href="#_7-10-3-插槽作用域" aria-hidden="true">#</a> 7-10-3.插槽作用域</h4><blockquote><p>插槽作用域的作用：方便父组件访问子组件的内容</p></blockquote><h5 id="简单案例" tabindex="-1"><a class="header-anchor" href="#简单案例" aria-hidden="true">#</a> 简单案例</h5><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token comment">&lt;!--使用子组件的作用域插槽   这里的scope显示的是{ &quot;kkl&quot;: &quot;哈麻皮&quot; }这样的一个对象--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>zizujian</span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!--2.父组件通过 slot-scope接收子组件传递过来的对象 { &quot;kkl&quot;: &quot;哈麻皮&quot; }--&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot-scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scope<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        {{scope}}\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>zizujian</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token comment">//申明一个子组件</span>\n    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&quot;zizujian&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n        <span class="token comment">//1.在子组件的slot上使用v-bind的方式向父组件传递数据</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt; 子组件\n         &lt;slot :kkl=&quot;hamapi&quot;&gt;&lt;/slot&gt;\n        &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span><span class="token punctuation">{</span>\n                <span class="token literal-property property">hamapi</span><span class="token operator">:</span><span class="token string">&quot;哈麻皮&quot;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div>',5),I=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210913004713486",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210913004713486.png",data:"aurora"})],-1),C=(0,p._)("h5",{id:"较为复杂的案例",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#较为复杂的案例","aria-hidden":"true"},"#"),(0,p.Uk)(" 较为复杂的案例")],-1),P=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210506004202548",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210506004202548.png",data:"aurora"})],-1),H=(0,p.uE)('<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>chacao</span> <span class="token attr-name">:doglist</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>doglist<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!-- 指定插槽的值的操作范围 这个scopeValue只是个变量名 --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot-scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scopeValue<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token comment">&lt;!-- 指定操作条件 --&gt;</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scopeValue.kkl.id %2 ==0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{scopeValue.kkl.name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-else</span><span class="token punctuation">&gt;</span></span>{{scopeValue.kkl.name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>chacao</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token comment">//定义一个插槽</span>\n  Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;chacao&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">props</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;doglist&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"> &lt;div&gt;&lt;ul&gt;\n      &lt;li v-for=&quot;item in doglist&quot; :key=&quot;item.id&quot;&gt;\n        &lt;slot :kkl=&quot;item&quot;&gt;\n          {{item.name}}\n        &lt;/slot&gt;\n      &lt;/li&gt;\n    &lt;/ul&gt;&lt;/div&gt; </span><span class="token template-punctuation string">`</span></span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">doglist</span><span class="token operator">:</span><span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;小泉&#39;</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">1</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;小野寺梨纱&#39;</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">2</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;长濑茜&#39;</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">3</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;麻生希&#39;</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">4</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;北原多香子&#39;</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">5</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br></div></div>',1),D=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210506012434509",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210506012434509.png",data:"aurora"})],-1),L=(0,p._)("h3",{id:"_7-11-组件的嵌套",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#_7-11-组件的嵌套","aria-hidden":"true"},"#"),(0,p.Uk)(" 7-11.组件的嵌套")],-1),O=(0,p._)("blockquote",null,[(0,p._)("p",null,"一个组件里面可以嵌套另外的组件")],-1),K=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210507151206985",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210507151206985.png",data:"aurora"})],-1),T=(0,p.uE)('<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>zujian</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>zujian</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token comment">//创建一个组件  将一个组件套入到另一个组件</span>\n    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;zujian&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;\n        &lt;el-card&gt;我是一只小小小鸟&lt;/el-card&gt;\n        &lt;wu&gt;&lt;/wu&gt;\n        &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;wu&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;\n        &lt;el-card&gt;我就不同了,我的鸟比较大&lt;/el-card&gt;\n        &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h3 id="_7-12-组件复用案例-购物车" tabindex="-1"><a class="header-anchor" href="#_7-12-组件复用案例-购物车" aria-hidden="true">#</a> 7-12.组件复用案例：购物车</h3><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>zujian</span> <span class="token attr-name">:price</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>appPrice<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@tijiaors</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>countRs<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>zujian</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>zujian</span> <span class="token attr-name">:price</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>parPrice<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@tijiaors</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>countRs<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>zujian</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>总价:{{totalPrice}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token comment">//定义组件</span>\n    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;zujian&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n          &lt;div&gt;\n          &lt;el-row&gt;\n            &lt;el-col style=&quot;display: flex&quot;&gt;\n              花椒 单价:{{ price }}\n              数量\n              &lt;el-button @click=&quot;addNum&quot;&gt;+&lt;/el-button&gt;\n              &lt;el-input style=&quot;width: 80px&quot; v-model=&quot;num&quot;&gt;&lt;/el-input&gt;\n              &lt;el-button @click=&quot;subNum&quot;&gt;-&lt;/el-button&gt;\n              总价: {{ rs }}\n            &lt;/el-col&gt;\n          &lt;/el-row&gt;\n          &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n        <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;price&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                <span class="token literal-property property">num</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">computed</span><span class="token operator">:</span><span class="token punctuation">{</span>\n            <span class="token comment">//根据价格和数量计算rs的值</span>\n          <span class="token function">rs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n              <span class="token keyword">return</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>num<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>price\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token comment">//根据rs的变化,提交新值和旧值</span>\n            <span class="token function">rs</span><span class="token punctuation">(</span><span class="token parameter">newValue<span class="token punctuation">,</span> oldValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newValue<span class="token punctuation">,</span>oldValue<span class="token punctuation">)</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;tijiaors&#39;</span><span class="token punctuation">,</span> oldValue<span class="token punctuation">,</span> newValue<span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token function">addNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>num<span class="token operator">++</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token function">subNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>num<span class="token operator">--</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token comment">//app的单价</span>\n            <span class="token literal-property property">appPrice</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>\n            <span class="token comment">//par的单价</span>\n            <span class="token literal-property property">parPrice</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">totalPrice</span><span class="token operator">:</span> <span class="token number">0</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token comment">//父组件减去旧值,再加上新值,然后赋值给总价</span>\n            <span class="token function">countRs</span><span class="token punctuation">(</span><span class="token parameter">oldValue<span class="token punctuation">,</span> newValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n               <span class="token keyword">this</span><span class="token punctuation">.</span>totalPrice <span class="token operator">=</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>totalPrice <span class="token operator">-</span> oldValue <span class="token operator">+</span> newValue\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br></div></div><h2 id="_8-vue路由" tabindex="-1"><a class="header-anchor" href="#_8-vue路由" aria-hidden="true">#</a> 8.VUE路由</h2><h3 id="_8-0-路由原理" tabindex="-1"><a class="header-anchor" href="#_8-0-路由原理" aria-hidden="true">#</a> 8-0.路由原理</h3><h4 id="_8-0-0-复习锚点知识" tabindex="-1"><a class="header-anchor" href="#_8-0-0-复习锚点知识" aria-hidden="true">#</a> 8-0.0.复习锚点知识</h4><blockquote><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token comment">&lt;!--1设置锚点链接--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#hamapi<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>点击直接跳转到哈麻皮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n<span class="token comment">&lt;!--设置锚点链接与锚点之间的阻拦--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 2000px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> rebeccapurple</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token comment">&lt;!--1定义锚点--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hamapi<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>这就是锚点<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></blockquote><h4 id="_8-0-1-使用vue组件知识自己实现一个路由" tabindex="-1"><a class="header-anchor" href="#_8-0-1-使用vue组件知识自己实现一个路由" aria-hidden="true">#</a> 8-0-1.使用vue组件知识自己实现一个路由</h4><p>方式一：</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!--提供链接--&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#a<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>组件a<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#b<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>组件b<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#c<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>组件c<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!-- 按照链接里面的路径渲染组件 --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>comment</span> <span class="token attr-name">:is</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>compName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>comment</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token comment">//1.定义组件</span>\n    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;zujianA&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;组件a&lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;zujianB&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;组件B&lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;zujianC&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;组件C&lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">compName</span><span class="token operator">:</span> <span class="token string">&quot;zujianA&quot;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">//监听hash的变化       当hash变化后，触发此函数</span>\n            window<span class="token punctuation">.</span><span class="token function-variable function">onhashchange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                <span class="token comment">//从location中取出hash</span>\n                <span class="token keyword">const</span> hash <span class="token operator">=</span> location<span class="token punctuation">.</span>hash\n                <span class="token comment">//申明路由对象，直接一个对象就是一个键值对</span>\n                <span class="token keyword">let</span> routers <span class="token operator">=</span> <span class="token punctuation">{</span>\n                    <span class="token string-property property">&quot;#a&quot;</span><span class="token operator">:</span> <span class="token string">&#39;zujianA&#39;</span><span class="token punctuation">,</span>\n                    <span class="token string-property property">&quot;#b&quot;</span><span class="token operator">:</span> <span class="token string">&#39;zujianB&#39;</span><span class="token punctuation">,</span>\n                    <span class="token string-property property">&quot;#c&quot;</span><span class="token operator">:</span> <span class="token string">&#39;zujianC&#39;</span>\n                <span class="token punctuation">}</span>\n                <span class="token comment">//遍历对象的key</span>\n                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> routersKey <span class="token keyword">in</span> routers<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token comment">//如果hash的字符串和路由对象的key一致</span>\n                    <span class="token keyword">if</span> <span class="token punctuation">(</span>hash <span class="token operator">===</span> routersKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        <span class="token comment">//就将这个key对应的value赋值给全局的组件名compName</span>\n                        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>compName <span class="token operator">=</span>  routers<span class="token punctuation">[</span>routersKey<span class="token punctuation">]</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div><p>方式二：</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!--提供链接--&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#a<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>组件a<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#b<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>组件b<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#c<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>组件c<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!-- 按照链接里面的路径渲染组件 --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>comment</span> <span class="token attr-name">:is</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>compName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>comment</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token comment">//1.定义组件</span>\n    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;zujianA&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;组件a&lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;zujianB&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;组件B&lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;zujianC&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;组件C&lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">compName</span><span class="token operator">:</span> <span class="token string">&quot;zujianA&quot;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">//监听hash的变更事件    这里是hash变更后执行的函数</span>\n            window<span class="token punctuation">.</span><span class="token function-variable function">onhashchange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                <span class="token comment">//从window.location中取出hash</span>\n                <span class="token keyword">const</span> hash <span class="token operator">=</span> location<span class="token punctuation">.</span>hash\n                <span class="token comment">//定义路由数组对象</span>\n                <span class="token keyword">let</span> router <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string-property property">&quot;#a&quot;</span><span class="token operator">:</span> <span class="token string">&#39;zujianA&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string-property property">&quot;#b&quot;</span><span class="token operator">:</span> <span class="token string">&#39;zujianB&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string-property property">&quot;#c&quot;</span><span class="token operator">:</span> <span class="token string">&#39;zujianC&#39;</span><span class="token punctuation">}</span><span class="token punctuation">]</span>\n                <span class="token comment">//声明组件名字</span>\n                <span class="token keyword">let</span> zujianName<span class="token punctuation">;</span>\n                <span class="token comment">//遍历路由对象数组</span>\n                router<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                    <span class="token comment">//从每个路由对象中拿出key</span>\n                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> itemKey <span class="token keyword">in</span> item<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        <span class="token comment">//判断key和hash是否一致</span>\n                        <span class="token keyword">if</span> <span class="token punctuation">(</span>itemKey <span class="token operator">===</span> hash<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                            <span class="token comment">//如果key和hash一致，就将key对应的value赋值给组件名</span>\n                            zujianName <span class="token operator">=</span> item<span class="token punctuation">[</span>itemKey<span class="token punctuation">]</span>\n                        <span class="token punctuation">}</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>zujianName<span class="token punctuation">)</span>\n                <span class="token comment">//将组件名赋值给vue的全局compName</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>compName <span class="token operator">=</span> zujianName\n            <span class="token punctuation">}</span>          \n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br></div></div><h3 id="_8-1-路由概述" tabindex="-1"><a class="header-anchor" href="#_8-1-路由概述" aria-hidden="true">#</a> 8-1.路由概述</h3><p>官方原文：</p><p>用 Vue.js + Vue Router 创建单页应用，感觉很自然：使用 Vue.js ，我们已经可以通过组合组件来组成应用程序，当你要把 Vue Router 添加进来，我们需要做的是，将组件 (components) 映射到路由 (routes)，然后告诉 Vue Router 在哪里渲染它们。</p><blockquote><p>要解决的问题：更加方便的创建单页面应用</p><p>创建方式： 1引入vue.js &gt;&gt;&gt; 2引入VueRouter&gt;&gt;&gt;&gt;3创建路由组件&gt;&gt;&gt;&gt;4创建VueRouter实例&gt;&gt;&gt;在VueRouter里面</p></blockquote><h4 id="前后端路由的差别" tabindex="-1"><a class="header-anchor" href="#前后端路由的差别" aria-hidden="true">#</a> 前后端路由的差别：</h4><blockquote><p>后端路由： 根据不同的URL请求，返回不同的服务器资源---增加服务器负荷，导致性能问题 前端路由： 根据不同的用户事件，显示不同的页面内容(显示的是不同的组件，路由的本质就是把不同的组件回显给不同的用户事件) 采用前端路由，可以解决ajax技术导致的浏览器不支持前进后退的问题，实现单页面应用程序(SPA)，也就是整个网站只有一个页面，不过这种技术不利于提高SEO，不利于商业推广</p></blockquote><h4 id="路由的渲染原理" tabindex="-1"><a class="header-anchor" href="#路由的渲染原理" aria-hidden="true">#</a> 路由的渲染原理：-</h4><blockquote><p>vue-router.js渲染的原理 1、router-link 这个标签会被渲染为a标签 2、router-link 的to属性会被渲染为href属性 3、router-link 的to属性的值会被渲染为herf属性的值，就是以#开头的hash地址</p></blockquote><h3 id="_8-2-定义一个基本的路由" tabindex="-1"><a class="header-anchor" href="#_8-2-定义一个基本的路由" aria-hidden="true">#</a> 8-2.定义一个基本的路由</h3><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>1、引入vue.js后引入vue-router\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue-router.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n2、定义路由组件\n//1、定义路由组件\nconst biaoyu1 = {\n    template: `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>天大地大,明教最大<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>`\n}\nconst baioyu2 = {\n    template: ` <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>红莲圣火,燃我残躯<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>  `\n}\n\n3、配置路由规则，创建路由实例\n//2、配置路由规则创建路由实例\nlet router = new VueRouter({\n    //配置规则数组  注意 这个单词容易写错\n    routes: [\n        {path: &#39;/baioyu1&#39;, component: biaoyu1},\n        {path: &#39;/baioyu2&#39;, component: baioyu2}\n    ]\n});\n\n4、把路由器挂载到根实例中\nconst app = new Vue({\n    el: &quot;#app&quot;,\n    data: {},\n    //3挂载路由  如果属性名与属性值一值,可以只写一个\n    router\n})\n\n5、添加路由链接\n<span class="token comment">&lt;!-- 配置好路由组件,并且把路由规则搞出来后,并挂载上去之后,就可以在这里添加路由链接了--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/baioyu1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>点击我看星星<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/baioyu2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>点击我看月亮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>\n6、设置路由占位符----就是路由内容要渲染的位置\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100px</span><span class="token punctuation">&quot;</span></span></span> <span class="token punctuation">&gt;</span></span>\n<span class="token comment">&lt;!-- 这是使用路由的最后一步 就是让路由的内容显示到这里--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><h3 id="_8-3-路由重定向" tabindex="-1"><a class="header-anchor" href="#_8-3-路由重定向" aria-hidden="true">#</a> 8-3.路由重定向</h3><blockquote><p>应用场景：比如说我们的很多项目有个根路径“/”,但是我们希望用户一进来根路径，就可以看到“/home”里面的东西展示到页面，而不是看到一个白板，这个时候就要用到路由重定向</p></blockquote><p>官方说法：就是访问一个路径的时候，其实是强制跳转到另一个路径的，这样就可以展示特定组件的内容了。</p>',25),J=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210506121027434",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210506121027434.png",data:"aurora"})],-1),Y=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210506121129967",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210506121129967.png",data:"aurora"})],-1),W=(0,p.uE)('<h3 id="_8-4-编程式导航" tabindex="-1"><a class="header-anchor" href="#_8-4-编程式导航" aria-hidden="true">#</a> 8-4.编程式导航</h3><blockquote><p>导航定义： 就是从一个路由组件跳转到另一个路由组件的行为 导航的方式： 申明式导航：比如a标签跳转，<code>&lt;router-link&gt;</code>方式跳转，都是由明确的申明的 编程式导航：比如调用 location.href 的方式进行跳转，这都是通过调用js的API实现导航的</p><p>VueRouter中的编程式导航的API this.$router.push(&#39;跳转路径&#39;) -------------跳转到别的地方 this.$router.go(&#39;数字&#39;) ------跳转到浏览器里面有记录的地方 负数就是往回调，正数就是往后跳，但跳转的地方必须在浏览器里面有记录</p></blockquote><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!--此处的to必须加上 v-bind ,否则无法将后面的对象读取出来--&gt;</span>\n <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">:to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{name:<span class="token punctuation">&#39;</span>a<span class="token punctuation">&#39;</span>}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>到a<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>\n <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">:to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{name:<span class="token punctuation">&#39;</span>b<span class="token punctuation">&#39;</span>}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>到b<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;\n      &lt;el-button type=&quot;danger&quot; @click=&quot;gob&quot;&gt;点击到b&lt;/el-button&gt;\n      &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n      <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">{</span>\n        <span class="token function">gob</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n          <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;/b&quot;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;\n      &lt;el-button type=&quot;danger&quot; @click=&quot;goa&quot;&gt;点击到a&lt;/el-button&gt;\n      &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n      <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">{</span>\n        <span class="token function">goa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n          <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;/a&quot;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n   <span class="token keyword">const</span> router <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n     <span class="token literal-property property">routes</span><span class="token operator">:</span><span class="token punctuation">[</span>\n       <span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">&quot;/a&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">component</span><span class="token operator">:</span>a<span class="token punctuation">}</span><span class="token punctuation">,</span>\n       <span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">&quot;/b&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">component</span><span class="token operator">:</span>b<span class="token punctuation">}</span><span class="token punctuation">,</span>\n     <span class="token punctuation">]</span>\n   <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n      router\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><h3 id="_8-5-路由传参" tabindex="-1"><a class="header-anchor" href="#_8-5-路由传参" aria-hidden="true">#</a> 8-5.路由传参</h3><blockquote><p>应用场景： 当我们需要在父组件向路由组件跳转的时候，就需要传递参数过去，比如说：我们点击一个按钮，要带信息查询一些数据显示到展示区的时候，父组件的参数就要一起传给子组件，在子组件处于created阶段的时候，就带着信息去数据库查询数据，查询到数据后，展示出来</p></blockquote><h4 id="_8-5-1-传统的-键值对传参" tabindex="-1"><a class="header-anchor" href="#_8-5-1-传统的-键值对传参" aria-hidden="true">#</a> 8-5-1.传统的?+键值对传参</h4><blockquote><p>传值：&lt;router-link to=&quot;/path?键=值&quot; 取值： $route.query.键 这个耦合比较高，少用</p><p>1.用传统的方式传参,并不影响路由的跳转 2.通过uri传入的键值对,存放在当前路由的query对象里面,通过this.$route.query可以取到所有键值对的集合</p></blockquote><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/hamapi?name=2233<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>点击看蛤蟆皮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span>\n    //创建路由组件\n    const hamapi = {\n        template: `<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n        哈哈\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>`,\n        //路由组件的本质就是组件,组件的本质就是vue实例,所以路由组件也有路由组件的生命周期\n        created() {\n            console.log(&quot;路由组件&quot;)\n            console.log(this)\n            //可以发现这个this.$route里面有一堆东西\n            console.log(this.$route.query)\n        }\n    }\n    //注册路由\n    const router = new VueRouter({\n        //指定路由规则\n        routes: [\n            {path: &quot;/hamapi&quot;, component: hamapi}\n        ]\n    })\n    const vm = new Vue({\n        el: &quot;#app&quot;,\n        data: {},\n        mounted() {\n            console.log(&quot;实例&quot;)\n            console.log(this)\n        },\n        router\n    })\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h4 id="_8-5-2-params占位符传参" tabindex="-1"><a class="header-anchor" href="#_8-5-2-params占位符传参" aria-hidden="true">#</a> 8-5-2.params占位符传参</h4><blockquote><p>传值 &lt;router-link to=&quot;/path/:占位&quot; 取值： $route.params.占位 这个耦合比较高，少用</p><p>1.要想通过restful风格带参访问子路由，则必须在路由规则的path里面申明占位符，用:占位</p></blockquote>',10),X=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210506122403389",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210506122403389.png",data:"aurora"})],-1),G=(0,p._)("h4",{id:"_8-5-3-props-true-传参",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#_8-5-3-props-true-传参","aria-hidden":"true"},"#"),(0,p.Uk)(" 8-5-3.{props:true}传参")],-1),Z=(0,p._)("blockquote",null,[(0,p._)("p",null,"布尔模式 通过设置props:true 解耦，可以像正常组件一样传参")],-1),Q=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210506122523250",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210506122523250.png",data:"aurora"})],-1),nn=(0,p._)("h4",{id:"_8-5-4-props-对象-传参",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#_8-5-4-props-对象-传参","aria-hidden":"true"},"#"),(0,p.Uk)(" 8-5-4.{props:{对象}}传参")],-1),sn=(0,p._)("blockquote",null,[(0,p._)("p",null,"对象模式，可以像正常组件一样传参")],-1),an=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210506122609238",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210506122609238.png",data:"aurora"})],-1),pn=(0,p._)("h4",{id:"_8-5-5-函数模式传参",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#_8-5-5-函数模式传参","aria-hidden":"true"},"#"),(0,p.Uk)(" 8-5-5.函数模式传参")],-1),tn=(0,p._)("blockquote",null,[(0,p._)("p",null,"函数模式，传动态对象")],-1),en=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210506122644831",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210506122644831.png",data:"aurora"})],-1),on=(0,p.uE)('<h4 id="_8-5-6-总结" tabindex="-1"><a class="header-anchor" href="#_8-5-6-总结" aria-hidden="true">#</a> 8-5-6.总结</h4><blockquote><p>以上所有的传参方式，首推props的函数模式，因为它既能从restful风格的URI里面取值，又能从对象里面取值，同时还能解耦.</p><p>5-1和5-2有耦合度高的问题，</p><p>5-3只能读取restful风格里面的传参</p><p>5-4不能读取restful风格的URI里面的传参</p><p>5-5是完美的</p></blockquote><h3 id="_8-6-嵌套路由" tabindex="-1"><a class="header-anchor" href="#_8-6-嵌套路由" aria-hidden="true">#</a> 8-6.嵌套路由</h3><blockquote><p>应用场景： 当我们进入一个页面的时候，只需要用户看到几个大的模块化的分类，而不应该让用户看到所有的分类细节，例如我们做的思维导图笔记，点击一个，可以弹出下面的一系列的东西，不点击就不展示。</p></blockquote>',4),ln=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210508002918455",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210508002918455.png",data:"aurora"})],-1),cn=(0,p._)("p",null,"实现方式：",-1),un=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210508003023155",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210508003023155.png",data:"aurora"})],-1),rn=(0,p.uE)('<p>具体代码</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!--父路由--&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/a<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>弓箭手<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/b<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>法师团<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token comment">//定义父级路由模块</span>\n    <span class="token keyword">const</span> routerA <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"> &lt;div&gt;\n           &lt;div&gt;弓箭营&lt;/div&gt;\n           &lt;router-link to=&quot;/a/a1&quot;&gt;火系弓箭手&lt;/router-link&gt;\n           &lt;router-link to=&quot;/a/a2&quot;&gt;冰系弓箭手&lt;/router-link&gt;\n           &lt;router-link to=&quot;/a/a3&quot;&gt;强弩手&lt;/router-link&gt;\n           &lt;div style=&quot;border: 1px solid red;width: 300px;height: 100px&quot;&gt;\n             &lt;router-view&gt;&lt;/router-view&gt;\n           &lt;/div&gt;\n          &lt;/div&gt; </span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">const</span> routerB <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;\n          &lt;div&gt;法师营&lt;/div&gt;\n           &lt;router-link to=&quot;/b/b1&quot;&gt;五行法师&lt;/router-link&gt;\n           &lt;router-link to=&quot;/b/b2&quot;&gt;亡灵法师&lt;/router-link&gt;\n           &lt;router-link to=&quot;/b/b3&quot;&gt;剧毒法师&lt;/router-link&gt;\n           &lt;div style=&quot;border: 1px solid red;width: 300px;height: 100px&quot;&gt;\n             &lt;router-view&gt;&lt;/router-view&gt;\n           &lt;/div&gt;\n         &lt;/div&gt; </span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span>\n    <span class="token comment">//定义次级路由模块</span>\n    <span class="token keyword">const</span> routerAa1 <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt; &lt;p&gt;火系弓箭手,英勇无敌&lt;/p&gt; &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">const</span> routerAa2 <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt; &lt;p&gt;冰系弓箭手,神勇无双&lt;/p&gt; &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">const</span> routerAa3 <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt; &lt;p&gt;强弩手,火力强劲&lt;/p&gt; &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">const</span> routerBb1 <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt; &lt;p&gt;五行法师,能力诡异&lt;/p&gt; &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">const</span> routerBb2 <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt; &lt;p&gt;亡灵法师,与骷髅为伍&lt;/p&gt; &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">const</span> routerBb3 <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt; &lt;p&gt;剧毒法师,毒术无双&lt;/p&gt; &lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">//注册路由组件</span>\n    <span class="token keyword">let</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">routes</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n                <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/a&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">component</span><span class="token operator">:</span> routerA<span class="token punctuation">,</span> <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n                    <span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/a/a1&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">component</span><span class="token operator">:</span> routerAa1<span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/a/a2&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">component</span><span class="token operator">:</span> routerAa2<span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/a/a3&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">component</span><span class="token operator">:</span> routerAa3<span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">]</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n                <span class="token comment">//在配置路由路线规则的时候,配置children属性,在里面写一堆子组件即可</span>\n                <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/b&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">component</span><span class="token operator">:</span> routerB<span class="token punctuation">,</span> <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n                    <span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/b/b1&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">component</span><span class="token operator">:</span> routerBb1<span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/b/b2&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">component</span><span class="token operator">:</span> routerBb2<span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/b/b3&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">component</span><span class="token operator">:</span> routerBb3<span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">]</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n    <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token comment">//将路由挂载到实例</span>\n        router\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br></div></div><h3 id="_8-7-命名路由" tabindex="-1"><a class="header-anchor" href="#_8-7-命名路由" aria-hidden="true">#</a> 8-7.命名路由</h3><blockquote><p>要解决的问题：</p><p>不记得或者不想写路由的路径，这个时候就可以给<code>&lt;router-link &gt;</code>的to属性传入一个对象，在传入对象的同时，也可以进行传参，传参要解耦，得在路由规则里面配置<code>props:true</code>, 如果传入query对象，<code>this.$route.query</code>仍可读取query里面的东西</p></blockquote><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token comment">&lt;!--注意,组件名必须是字符串--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">:to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{name:<span class="token punctuation">&#39;</span>denglu<span class="token punctuation">&#39;</span>,query:{<span class="token punctuation">&#39;</span>hamapi<span class="token punctuation">&#39;</span>:<span class="token punctuation">&#39;</span>哈麻皮<span class="token punctuation">&#39;</span>}}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">:to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{name:<span class="token punctuation">&#39;</span>zhuce<span class="token punctuation">&#39;</span>}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>\n  <span class="token comment">&lt;!--出口--&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token comment">//定义路由组件</span>\n  <span class="token keyword">const</span> denglu <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;登录&lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">const</span> zhuce <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;注册&lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">//实例化路由</span>\n  <span class="token keyword">const</span>  router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token comment">//定义路由规则</span>\n    <span class="token literal-property property">routes</span><span class="token operator">:</span><span class="token punctuation">[</span>\n            <span class="token comment">/*注意,被命名的路由必须是字符串*/</span>\n      <span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">&quot;/denglu&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">component</span><span class="token operator">:</span>denglu<span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;denglu&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">&quot;/zhuce&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">component</span><span class="token operator">:</span> zhuce<span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;zhuce&#39;</span><span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n        router\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h3 id="_8-8-命名视图" tabindex="-1"><a class="header-anchor" href="#_8-8-命名视图" aria-hidden="true">#</a> 8-8.命名视图</h3><blockquote><p>要解决的问题：</p><p>使用同一个路径，跳转不同的视图，比如路径为&quot;/&quot;的时候，要展示侧边栏，头部，尾部，主视图</p></blockquote><p>页面结构</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token comment">&lt;!--入口--&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!--出口--&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tou<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zhuye<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>leftsider<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rightsider<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wei<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token comment">//定义路由</span>\n    <span class="token keyword">const</span> tou <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div class=&quot;tou&quot;&gt;头部&lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">const</span> wei <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div class=&quot;wei&quot;&gt;尾部&lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">const</span> leftsider <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div class=&quot;leftsider&quot;&gt;左侧&lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">const</span> rightsider <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div class=&quot;rightsider&quot;&gt;主视图&lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span>\n    <span class="token comment">//实例化路由,定义路由规则</span>\n    <span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token comment">//定义规则</span>\n        <span class="token literal-property property">routes</span><span class="token operator">:</span><span class="token punctuation">[</span>\n            <span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">{</span>\n                <span class="token keyword">default</span><span class="token operator">:</span>rightsider<span class="token punctuation">,</span>\n                    tou<span class="token punctuation">,</span>\n                    wei<span class="token punctuation">,</span>\n                    leftsider<span class="token punctuation">,</span>\n                    rightsider\n                <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n        router\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><p>样式</p><div class="language-less ext-less line-numbers-mode"><pre class="language-less"><code><span class="token comment">/*样式*/</span>\n<span class="token selector">.tou</span><span class="token punctuation">{</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n   <span class="token property">background</span><span class="token punctuation">:</span> darkmagenta<span class="token punctuation">;</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n  <span class="token property">align-self</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.zhuye</span><span class="token punctuation">{</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n  <span class="token selector">.leftsider</span><span class="token punctuation">{</span>\n    <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>\n    <span class="token property">background</span><span class="token punctuation">:</span> #5daf34<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token selector">.rightsider</span><span class="token punctuation">{</span>\n    <span class="token property">flex</span><span class="token punctuation">:</span> 9<span class="token punctuation">;</span>\n    <span class="token property">background</span><span class="token punctuation">:</span> #bcbec2<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.wei</span><span class="token punctuation">{</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n  <span class="token property">background</span><span class="token punctuation">:</span> #f750c6<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h3 id="_8-9-路由中监视当前路由的路径" tabindex="-1"><a class="header-anchor" href="#_8-9-路由中监视当前路由的路径" aria-hidden="true">#</a> 8-9.路由中监视当前路由的路径</h3><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token comment">&lt;!--7设置路由链接--&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">active-class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hamapi<span class="token punctuation">&quot;</span></span> <span class="token attr-name">tag</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span>  <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/login<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!--8设置路由出口--&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token comment">//3定义一个路由组件</span>\n    <span class="token keyword">const</span> luyou1 <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">template</span><span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;这是个路由组件&lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span>\n    <span class="token comment">//4实例化路由</span>\n    <span class="token keyword">let</span> router <span class="token operator">=</span> <span class="token keyword">new</span>  <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token comment">//5.定义路由规则</span>\n        <span class="token literal-property property">routes</span><span class="token operator">:</span><span class="token punctuation">[</span>\n            <span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">&quot;/login&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">component</span><span class="token operator">:</span>luyou1<span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token comment">//6.挂载路由</span>\n        router<span class="token punctuation">,</span>\n        <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token comment">//这里是刷新的时候就可以监视得到</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;mounted中监视到的当前路由的路径:  &quot;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>path<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">watch</span><span class="token operator">:</span><span class="token punctuation">{</span>\n            <span class="token comment">//监视当前路由的路径===这种监视,只能是在切换的瞬间才能监视得到</span>\n           <span class="token string-property property">&#39;$route.path&#39;</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">newValue</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n               console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;watch侦听器中监视到的当前路由的路径: &quot;</span><span class="token punctuation">,</span>newValue<span class="token punctuation">)</span>\n           <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><h2 id="_9-前端工程化" tabindex="-1"><a class="header-anchor" href="#_9-前端工程化" aria-hidden="true">#</a> 9.前端工程化</h2><h3 id="各种方式搭建脚手架" tabindex="-1"><a class="header-anchor" href="#各种方式搭建脚手架" aria-hidden="true">#</a> 各种方式搭建脚手架</h3><h4 id="_1使用命令行创建项目" tabindex="-1"><a class="header-anchor" href="#_1使用命令行创建项目" aria-hidden="true">#</a> 1使用命令行创建项目</h4><blockquote><p>官网资料：https://cli.vuejs.org/zh/guide/prototyping.html</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#安装vue-cli</span>\n<span class="token function">npm</span> <span class="token function">install</span> -g @vue/cli\n<span class="token comment">#安装完毕可以通过 vue --version查看版本号，不要纠结具体的版本号，因为这里的版本经常更新，每次都不一样</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',18),kn=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210513103209616",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210513103209616.png",data:"aurora"})],-1),bn=(0,p._)("blockquote",null,[(0,p._)("p",null,"使用： 1、在一个空的文件夹，按住shift+鼠标右键，选择在此处打开powershell")],-1),mn=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210513103652342",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210513103652342.png",data:"aurora"})],-1),gn=(0,p._)("blockquote",null,[(0,p._)("p",null,"2、输入 vue create 工程名(只能小写)")],-1),dn=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210513103902067",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210513103902067.png",data:"aurora"})],-1),hn=(0,p._)("blockquote",null,[(0,p._)("p",null,"3、选择 后来的版本要求选择vue版本，就选2.x 回车，这里这个use history选n")],-1),vn=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210513103940295",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210513103940295.png",data:"aurora"})],-1),yn=(0,p._)("blockquote",null,[(0,p._)("p",null,"4、创建成功 可以按最下方提示的命令进入目录和启动项目")],-1),qn=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210513104053079",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210513104053079.png",data:"aurora"})],-1),fn=(0,p._)("blockquote",null,[(0,p._)("p",null,"5、观察目录 目录比vue-cli 2.xx这个版本更加精简")],-1),wn=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210513104313944",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210513104313944.png",data:"aurora"})],-1),_n=(0,p._)("blockquote",null,[(0,p._)("p",null,"6、npm run serve # 启动项目 这个是vue-cli 创建完毕后自己会提醒你的"),(0,p._)("p",null,"7、但是作为后台开发人员一般使用下面的方式")],-1),xn=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210513104201661",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210513104201661.png",data:"aurora"})],-1),jn=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210513104612115",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210513104612115.png",data:"aurora"})],-1),zn=(0,p._)("blockquote",null,[(0,p._)("p",null,"8、启动项目后，可以看到以下页面")],-1),Vn=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210513104753378",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210513104753378.png",data:"aurora"})],-1),En=(0,p._)("h4",{id:"_2使用gui搭建脚手架",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#_2使用gui搭建脚手架","aria-hidden":"true"},"#"),(0,p.Uk)(" 2使用GUI搭建脚手架")],-1),An=(0,p._)("blockquote",null,[(0,p._)("p",null,"不推荐这种方式，因为这种方式搭建的脚手架，容易出问题")],-1),Bn=(0,p._)("blockquote",null,[(0,p._)("p",null,"1在命令行输入指令 vue ui")],-1),Fn=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210513105015914",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210513105015914.png",data:"aurora"})],-1),Sn=(0,p._)("blockquote",null,[(0,p._)("p",null,"2然后一路跟着提示往下操作即可，注意，使用webstrom开发的话，就不要选择eslint了")],-1),Un=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210513105101375",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210513105101375.png",data:"aurora"})],-1),$n=(0,p._)("h4",{id:"_3使用idea-webstorm等jetbrains系列软件搭建脚手架",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#_3使用idea-webstorm等jetbrains系列软件搭建脚手架","aria-hidden":"true"},"#"),(0,p.Uk)(" 3使用IDEA webstorm等jetbrains系列软件搭建脚手架")],-1),Nn=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210513105353026",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210513105353026.png",data:"aurora"})],-1),Mn=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210513105410370",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210513105410370.png",data:"aurora"})],-1),Rn=(0,p._)("h4",{id:"_4使用hbuilder创建搭建脚手架",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#_4使用hbuilder创建搭建脚手架","aria-hidden":"true"},"#"),(0,p.Uk)(" 4使用HBuilder创建搭建脚手架")],-1),In=(0,p._)("blockquote",null,[(0,p._)("p",null,"直接使用HBuilderX，创建一个工程，然后使用IDEA或者webstorm打开")],-1),Cn=(0,p._)("h4",{id:"_5使用powershell的时候的坑",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#_5使用powershell的时候的坑","aria-hidden":"true"},"#"),(0,p.Uk)(" 5使用POWERSHELL的时候的坑")],-1),Pn=(0,p._)("blockquote",null,[(0,p._)("p",null,"如果出现以下画面，就表明powershell没有操作权限")],-1),Hn=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210513105616040",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210513105616040.png",data:"aurora"})],-1),Dn=(0,p._)("blockquote",null,[(0,p._)("p",null,"处理方法："),(0,p._)("p",null,"1.随便找个文件夹，点击文件，以管理员身份打开powershell")],-1),Ln=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210513105647789",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210513105647789.png",data:"aurora"})],-1),On=(0,p._)("blockquote",null,[(0,p._)("p",null,"2.输入指令： set-ExecutionPolicy RemoteSigned")],-1),Kn=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210513105747953",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210513105747953.png",data:"aurora"})],-1),Tn=(0,p._)("h3",{id:"vue脚手架目录说明",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#vue脚手架目录说明","aria-hidden":"true"},"#"),(0,p.Uk)(" vue脚手架目录说明")],-1),Jn=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210513150835320",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210513150835320.png",data:"aurora"})],-1),Yn=(0,p.uE)('<h3 id="_9-0-项目基础配置" tabindex="-1"><a class="header-anchor" href="#_9-0-项目基础配置" aria-hidden="true">#</a> 9-0.项目基础配置</h3><p>官方原文</p><p>https://cli.vuejs.org/zh/config/#vue-config-js</p><blockquote><p><code>vue.config.js</code> 是一个可选的配置文件，如果项目的 (和 <code>package.json</code> 同级的) 根目录中存在这个文件，那么它会被 <code>@vue/cli-service</code> 自动加载。你也可以使用 <code>package.json</code> 中的 <code>vue</code> 字段，但是注意这种写法需要你严格遵照 JSON 的格式来写。</p></blockquote><p>范例代码---vue.config.js</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//导出模块</span>\nmodule<span class="token punctuation">.</span>exports<span class="token operator">=</span><span class="token punctuation">{</span>\n    <span class="token comment">//开发时的配置</span>\n    <span class="token literal-property property">devServer</span><span class="token operator">:</span><span class="token punctuation">{</span>\n        <span class="token comment">//指定端口号</span>\n        <span class="token literal-property property">port</span><span class="token operator">:</span><span class="token number">9000</span><span class="token punctuation">,</span>\n        <span class="token comment">//自动打开默认浏览器</span>\n        <span class="token literal-property property">open</span><span class="token operator">:</span><span class="token boolean">true</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="_9-1-导入less" tabindex="-1"><a class="header-anchor" href="#_9-1-导入less" aria-hidden="true">#</a> 9-1.导入less</h3><blockquote><p>一般的方式不能导入less，因为版本不匹配，以下版本的less可以正常匹配 @vue/cli 4.5.11</p><p>命令行：</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> less-loader@5.0.0 -s\n<span class="token function">npm</span> <span class="token function">install</span> less@3.9.0 -s\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p>main.js</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> less <span class="token keyword">from</span> <span class="token string">&#39;less&#39;</span>\nVue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>less<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p>vue单文件组件</p></blockquote><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>less<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n<span class="token comment">/* lang是所用的语言   scoped表示只在当前组件生效 */</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_9-2-导入element" tabindex="-1"><a class="header-anchor" href="#_9-2-导入element" aria-hidden="true">#</a> 9-2.导入element</h3><blockquote><p>控制台</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> i element-ui -S\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>main.js</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> ElementUI <span class="token keyword">from</span> <span class="token string">&#39;element-ui&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;element-ui/lib/theme-chalk/index.css&#39;</span><span class="token punctuation">;</span>\nVue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementUI<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_9-3-两种不同的组件配置" tabindex="-1"><a class="header-anchor" href="#_9-3-两种不同的组件配置" aria-hidden="true">#</a> 9-3.两种不同的组件配置</h3><h4 id="_9-3-1-显示路由组件" tabindex="-1"><a class="header-anchor" href="#_9-3-1-显示路由组件" aria-hidden="true">#</a> 9-3-1.显示路由组件</h4><blockquote><p>编写组件</p></blockquote>',21),Wn=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210513165615517",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210513165615517.png",data:"aurora"})],-1),Xn=(0,p._)("blockquote",null,[(0,p._)("p",null,"将路由组件组装到路由器")],-1),Gn=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210513171036712",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210513171036712.png",data:"aurora"})],-1),Zn=(0,p._)("h4",{id:"_9-3-2-显示普通组件",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#_9-3-2-显示普通组件","aria-hidden":"true"},"#"),(0,p.Uk)(" 9-3-2.显示普通组件")],-1),Qn=(0,p._)("blockquote",null,[(0,p._)("p",null,"编写自定义组件")],-1),ns=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210513165206156",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210513165206156.png",data:"aurora"})],-1),ss=(0,p._)("blockquote",null,[(0,p._)("p",null,"将自定义组件组装到视图")],-1),as=(0,p._)("p",null,[(0,p._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"image-20210513165322013",originSrc:"https://bdqn-blog.oss-accelerate.aliyuncs.com/blog/vue%E5%9F%BA%E7%A1%80/image-20210513165322013.png",data:"aurora"})],-1),ps=(0,p.uE)('<h3 id="_9-4-较为全面的路由配置" tabindex="-1"><a class="header-anchor" href="#_9-4-较为全面的路由配置" aria-hidden="true">#</a> 9-4.较为全面的路由配置</h3><blockquote><p>下面是 /router/index.js 或者 router.js 里面的内容 这两种命名方式比较符合见名知意的规则</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> VueRouter <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span>\n<span class="token keyword">import</span> Login <span class="token keyword">from</span> <span class="token string">&quot;../views/Login&quot;</span><span class="token punctuation">;</span>\n<span class="token comment">//引入home页面</span>\n<span class="token keyword">import</span> Home <span class="token keyword">from</span> <span class="token string">&quot;../views/Home&quot;</span><span class="token punctuation">;</span>\n<span class="token comment">//引入welcome组件</span>\n<span class="token keyword">import</span> Welcome <span class="token keyword">from</span> <span class="token string">&quot;../components/Welcome&quot;</span><span class="token punctuation">;</span>\n<span class="token comment">/*\n省略一大堆的其他组件的引入\n*/</span>\n\nVue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueRouter<span class="token punctuation">)</span>\n\n<span class="token comment">//配置路由规则</span>\n<span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token string">&quot;/login&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;/login&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">component</span><span class="token operator">:</span> Login<span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">//将home添加到路由规则---下面就是个纯粹的单页面应用</span>\n    <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;/home&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">component</span><span class="token operator">:</span> Home<span class="token punctuation">,</span>\n        <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token string">&quot;/welcome&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">&quot;/welcome&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">component</span><span class="token operator">:</span>Welcome<span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token comment">//配置用户管理的路由</span>\n            <span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;/users&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">component</span><span class="token operator">:</span> Users<span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token comment">/*\n            省略一大堆其他子路由的配置\n            */</span>\n        <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n<span class="token comment">//命名实例化后的路由</span>\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    routes\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">//配置全局前置守卫 对请求进行拦截</span>\nrouter<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token comment">/*\n    * to: Route: 即将要进入的目标 路由对象\n      from: Route: 当前导航正要离开的路由\n      next: Function: 一定要调用该方法来 resolve 这个钩子。执行效果依赖 next 方法的调用参数。\n    * */</span>\n    <span class="token comment">//如果访问的是登陆页面,就直接放行</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>path <span class="token operator">===</span> <span class="token string">&quot;/login&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token comment">//如果要访问其他页面,就先获取token,如果token不为空,就放行,否则就强制跳转到登录页面</span>\n    <span class="token keyword">const</span> token <span class="token operator">=</span> window<span class="token punctuation">.</span>sessionStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//判断token是否为空</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>token<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Message.error(&quot;你没有登陆,无权访问本页面,已为你跳转到登陆页面&quot;)</span>\n        <span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&quot;login&quot;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        <span class="token comment">//dochain</span>\n        <span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">//导出路由</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> router\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br></div></div><blockquote><p>main.js的路由相关处理</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//从router文件引入路由</span>\n<span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">&#39;./router&#39;</span>\n<span class="token comment">//使用路由</span>\n<span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    router<span class="token punctuation">,</span>\n    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token parameter">h</span> <span class="token operator">=&gt;</span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>9-4.导入组件</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n<span class="token comment">&lt;!-- 为了确保单根性,这里直接在template标签里面放置DIV防止出错  --&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!-- 组件在这里使用  --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>jiacheng</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>jiacheng</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token comment">//一个组件要想被使用,得先import进来</span>\n<span class="token keyword">import</span> Jiacheng <span class="token keyword">from</span> <span class="token string">&quot;./components/Jiacheng&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token comment">/*这里面都是写vue的各种选项的,什么data,components,methods...之类的*/</span>\n  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;App&#39;</span><span class="token punctuation">,</span>\n  <span class="token comment">//components 里面放上面import 进来的组件</span>\n  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    Jiacheng\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>less<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n<span class="token comment">/*这里面都是写样式的 */</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div>',7),ts={},es=(0,a(3744).Z)(ts,[["render",function(n,s){return(0,p.wg)(),(0,p.iD)(p.HY,null,[e,o,l,c,u,r,i,k,b,m,g,(0,p._)("p",null,"v-text:一定程度上等效于"+(0,t.zw)(),1),d,(0,p._)("h5",h,[v,(0,p.Uk)(" v-text和"+(0,t.zw)()+"的区别",1)]),(0,p._)("ul",null,[y,(0,p._)("li",null,(0,t.zw)()+"不会覆盖标签体中已有的数据，而v-text会将标签体进行覆盖",1),(0,p._)("li",null,"在网络延迟高的情况下，"+(0,t.zw)()+"会将未填充数据的格式直接显示出来，这样会导致用户体验不佳，而v-text会等数据加载完后再进行渲染",1),(0,p._)("li",null,[(0,p.Uk)("如果非要用"+(0,t.zw)()+"又要解决上面的显示表达式的问题，就在父元素上面添加v-cloak，然后再",1),q,f,w])]),_,x,j,(0,p._)("p",null,"​ 通过花括号或者v-bind调用 ​ "+(0,t.zw)(n.参数|n.处理参数的函数)+" 返回处理后的结果 ​ 处理函数的参数:第一个参数是管道符号前的结果 ​ 多个过滤器链永远以最后一个过滤器输出的结果作为结果 ​ 过滤器必须return 显示的值是最后一个过滤器return的结果",1),z,V,E,A,B,F,S,U,$,N,M,R,I,C,P,H,D,L,O,K,T,J,Y,W,X,G,Z,Q,nn,sn,an,pn,tn,en,on,ln,cn,un,rn,kn,bn,mn,gn,dn,hn,vn,yn,qn,fn,wn,_n,xn,jn,zn,Vn,En,An,Bn,Fn,Sn,Un,$n,Nn,Mn,Rn,In,Cn,Pn,Hn,Dn,Ln,On,Kn,Tn,Jn,Yn,Wn,Xn,Gn,Zn,Qn,ns,ss,as,ps],64)}]])}}]);